{"version":3,"sources":["../../src/error.js","../../src/action.js","../../src/phase.js","api/errors.js","actions/types.js","utils/index.js","api/index.js","config.js","sagas/index.js","../../src/saga.js","../../src/reducer.js","reducers/ui/index.js","reducers/ui/posts.js","reducers/index.js","../../src/operation.js","store/index.js","store/configureStore.js","components/PostList/Pager.jsx","components/PostList/AuthorModal.jsx","../../src/selector.js","components/PostList/DataRow.jsx","../../src/hoc.js","connects/PostList/actions.js","connects/PostList/selectors.js","connects/PostList/MaybeDataRows.js","components/PostList/Placeholder.jsx","components/PostList/Loading.jsx","components/PostList/NoData.jsx","components/PostList/DataRows.jsx","components/PostList/Buffer.jsx","connects/PostList/MaybeBuffer.js","components/PostList/LoadingBuffer.jsx","components/PostList/Empty.jsx","connects/PostList/index.js","components/PostList/index.jsx","serviceWorker.js","index.js","components/App/index.jsx","components/PostList/index.module.scss"],"names":["error_FluxStandardActionError","_Error","FluxStandardActionError","_this","message","arguments","length","undefined","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","Error","captureStackTrace","assertThisInitialized","constructor","stack","inherits","wrapNativeSuper","UUID_NAMESPACE","v5_default","document","domain","action_idOfAction","action","lib","type","payload","meta","id","json_stable_stringify_default","action_isFinished","phase","action_succeedWith","objectSpread","progress","utime","Date","toISOString","action_failWith","error","action_makeActionAsync","trackableAction","pid","ctime","action_makeTrackable","action_createAsyncAction","createAction","MyError","ASYNC_GET_MANY_POST","ASYNC_PATCH_ONE_POST","ASYNC_GET_ONE_USER_BY_POST_ID","delay","seconds","Promise","resolve","window","setTimeout","recur","_len","args","Array","_key","repeat","$n","f","x","acc","apply","toConsumableArray","loop","n","post","schema","Entity","user","getManyPost","_ref","page","Math","ceil","random","then","mockedPosts","define","author","commenters","mockedCommenters","push","fullName","Random","concat","title","uniq","email","request","response","normalize","patchOnePost","_ref2","esm_extends","mock","star","Number","JSON","stringify","status","statusText","body","data","omit","params","getOneUser","_ref3","createDefaultWorker","slicedToArray","ErrorType","CleanupActionType","method","regenerator_default","a","mark","_callee","state","json","wrap","_context","prev","next","abrupt","dist_redux_saga_effects_npm_proxy_esm","sent","t0","stop","makeCreateDefaultWorker","sagas_callee","all","takeEvery","ActionTypes","Api","postId","entities","posts","_marked","entityActionMap","DEFAULT_ASYNC_ACTION_TYPE_REGEX","combineReducers","isFinished","_action$payload","result","pathOfBuffer","pathOfIds","get","set","compose","moveBufferToIds","EntityActionMap","_posts","defineProperty","k","l","r","difference","users","_users","actions","AsyncActionTypeRegex","isArray","omit_default","test","set_default","lensProp_default","mergeDeepRight_default","parse","errio_default","createActionsReducer","session","combinedReducers","entityTypes","compose_default","uniq_default","flatten_default","map_default","keys_default","queuedCombinedReducers","reduce_default","newCombined","entityType","queue","combined","cur","final","reducer","v","mergeQueuedReducers","groupByComposeByEntityType","reducers","operations","_ref4","operation","merger","getNewPayload","mergeDeepWithKey_default","reducer_createEntityTypeReducer","ui","configureStore","preloadedState","initialState","storeName","LS_KEY","localStorage","getItem","e","console","log","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","rootSaga","subscribe","setItem","getState","cx","classNames","bind","styles","PageNumber","onClick","selected","react_default","createElement","className","Pager","onPage","Pager_PageNumber","ReactModal","setAppElement","selectActions","selectActionIds","AuthorModal","isLoading","onCloseAuthorModal","react_modal_lib_default","isOpen","contentLabel","style","content","width","height","fontSize","textAlign","margin","paddingTop","role","DataRow","onStar","onStarTransient","onClearStarLoading","onViewAuthor","isChecked","onToggleCheck","scope","checked","onChange","withStates","dist_Recompose_esm","actionIds","setActionId","props","key","actionId","lens","lensPath_default","unsetActionId","_React$createContext","node_modules_react_default","createContext","Provider","Consumer","withAsyncActionContextProvider","ComponentIn","ComponentOut","rest","objectWithoutProperties","value","displayName","withAsyncActionContextConsumer","context","createAsyncActionContext","mapAsyncActionProps","onTrackAsyncAction","onUntrackAsyncAction","selectPostIds","selectUsers","selectPosts","createSelector","ids","map","String","selectPostsBuffer","buffer","filter","includes","reselect_es","reduceRecursively","reduce","selectModalAuthor","modalPostAuthor","selectTransientOfOnPage","selectTransientOfOnStar","withRedux","connect","selectProps","items","onPageTransient","dispatch","idOfAction","createAsyncAction","maybePlaceholder","branch","renderComponent","Fragment","colSpan","maybeLoading","rows","loading","maybeNoData","maybeNotDataRows","MaybeDataRows","withProps","transients","item","assign","onAccept","maybeBufferLoading","maybeNothing","maybeNotBuffer","modalAuthorInfo","setPage","setModalPostAuthor","onBatchStar","forEach","setSelected","withLifecycle","lifecycle","componentDidMount","withLiftedStates","withState","marginTop","MaybeBuffer","Boolean","location","hostname","match","ReactDOM","render","es","href","viewBox","version","aria-hidden","fillRule","d","connects_PostList","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","pagination","accept"],"mappings":"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","file":"static/js/main.1543941e.chunk.js","sourcesContent":["import _classCallCheck from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _wrapNativeSuper from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nexport var FluxStandardActionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(FluxStandardActionError, _Error);\n\n  function FluxStandardActionError() {\n    var _this;\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Invalid FSA. See https://github.com/acdlite/flux-standard-action';\n\n    _classCallCheck(this, FluxStandardActionError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FluxStandardActionError).call(this, message));\n    _this.name = 'FluxStandardActionError';\n    _this.message = message;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n\n    return _this;\n  }\n\n  return FluxStandardActionError;\n}(_wrapNativeSuper(Error));","import _objectSpread from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport stringify from 'json-stable-stringify';\nimport { createAction } from 'redux-actions';\nimport { isFSA } from 'flux-standard-action';\nimport uuidv5 from 'uuid/v5';\nimport { FluxStandardActionError } from './error';\nimport { PHASE_GHOST, PHASE_STARTED, PHASE_RUNNING, PHASE_FINISH } from './phase';\nvar UUID_NULL = '00000000-0000-0000-0000-000000000000';\nvar UUID_NAMESPACE = uuidv5(document.domain, UUID_NULL);\nexport var idOfAction = function idOfAction(action) {\n  if (!isFSA(action)) {\n    throw new FluxStandardActionError();\n  }\n\n  var type = action.type,\n      payload = action.payload,\n      meta = action.meta;\n\n  if (meta && meta.id) {\n    return meta.id;\n  }\n\n  return uuidv5(stringify([type, payload]), UUID_NAMESPACE);\n};\nexport var pidOfAction = function pidOfAction(action) {\n  if (!isFSA(action)) {\n    throw new FluxStandardActionError();\n  }\n\n  var _action$meta = action.meta,\n      meta = _action$meta === void 0 ? {} : _action$meta;\n  return meta.pid;\n};\nexport var makeTrackable = function makeTrackable(action) {\n  if (!isFSA(action)) {\n    throw new FluxStandardActionError();\n  }\n\n  return _objectSpread({}, action, {\n    meta: {\n      id: idOfAction(action),\n      pid: undefined,\n      ctime: new Date().toISOString()\n    }\n  });\n};\nexport var trackFor = function trackFor(parent) {\n  return function (child) {\n    if (!isFSA(child) || !isFSA(parent)) {\n      throw new FluxStandardActionError();\n    }\n\n    return _objectSpread({}, child, {\n      meta: {\n        id: idOfAction(child),\n        pid: idOfAction(parent),\n        ctime: new Date().toISOString()\n      }\n    });\n  };\n};\nexport var isStarted = function isStarted(action) {\n  return action.meta.phase === PHASE_STARTED;\n};\nexport var isRunning = function isRunning(action) {\n  return action.meta.phase === PHASE_RUNNING;\n};\nexport var isFinished = function isFinished(action) {\n  return action.meta.phase === PHASE_FINISH;\n};\nexport var continueWith = function continueWith(payload) {\n  var progress = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return function (action) {\n    if (!isFSA(action)) {\n      throw new FluxStandardActionError();\n    }\n\n    return _objectSpread({}, action, {\n      payload: payload,\n      meta: _objectSpread({}, action.meta, {\n        phase: PHASE_RUNNING,\n        progress: progress,\n        utime: new Date().toISOString()\n      })\n    });\n  };\n};\nexport var succeedWith = function succeedWith(payload) {\n  return function (action) {\n    if (!isFSA(action)) {\n      throw new FluxStandardActionError();\n    }\n\n    return _objectSpread({}, action, {\n      payload: payload,\n      meta: _objectSpread({}, action.meta, {\n        phase: PHASE_FINISH,\n        progress: 100,\n        utime: new Date().toISOString()\n      })\n    });\n  };\n};\nexport var failWith = function failWith(error) {\n  return function (action) {\n    if (!isFSA(action)) {\n      throw new FluxStandardActionError();\n    }\n\n    return _objectSpread({}, action, {\n      payload: error,\n      error: true,\n      meta: _objectSpread({}, action.meta, {\n        phase: PHASE_FINISH,\n        progress: 100,\n        utime: new Date().toISOString()\n      })\n    });\n  };\n};\nexport var isChildOf = function isChildOf(parent) {\n  return function (child) {\n    if (!isFSA(child) || !isFSA(parent)) {\n      throw new FluxStandardActionError();\n    }\n\n    return parent.meta.id === child.meta.pid;\n  };\n};\nexport var makeChildOf = function makeChildOf(parent) {\n  return function (child) {\n    if (!isFSA(child) || !isFSA(parent)) {\n      throw new FluxStandardActionError();\n    }\n\n    var childAction = trackFor(parent)(child);\n    return _objectSpread({}, childAction, {\n      meta: _objectSpread({}, childAction.meta, {\n        phase: PHASE_STARTED,\n        progress: 0\n      })\n    });\n  };\n};\nexport var makeActionAsync = function makeActionAsync(action) {\n  if (!isFSA(action)) {\n    throw new FluxStandardActionError();\n  }\n\n  var trackableAction = makeTrackable(action);\n  return _objectSpread({}, trackableAction, {\n    meta: _objectSpread({}, trackableAction.meta, {\n      phase: PHASE_STARTED,\n      progress: 0\n    })\n  });\n};\nexport var createAsyncAction = function createAsyncAction(type) {\n  return function (payload) {\n    return makeActionAsync(createAction(type)(payload));\n  };\n};","export var PHASE_GHOST = 'ghost'; // for optimistic\n\nexport var PHASE_STARTED = 'started';\nexport var PHASE_RUNNING = 'running';\nexport var PHASE_FINISH = 'finish';","export class MyError extends Error {\n    constructor(message = 'MyError') {\n        super(message);\n        this.name = 'MyError';\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export const CLEANUP = 'CLEANUP';\nexport const ASYNC_GET_MANY_POST = 'ASYNC_GET_MANY_POST';\nexport const ASYNC_DELETE_ONE_POST = 'ASYNC_DELETE_ONE_POST';\nexport const ASYNC_PATCH_ONE_POST = 'ASYNC_PATCH_ONE_POST';\nexport const ACCEPT_UPDATE_POST_LIST = 'ACCEPT_UPDATE_POST_LIST';\nexport const ASYNC_GET_ONE_USER_BY_POST_ID = 'ASYNC_GET_ONE_USER_BY_POST_ID';\n","export const delay = seconds => new Promise(resolve => window.setTimeout(resolve, seconds * 1000));\n\n// @see https://stackoverflow.com/questions/30452263/is-there-a-mechanism-to-loop-x-times-in-es6-ecmascript-6-without-mutable-varia\nconst recur = (...args) => ({ type: recur, args });\n\nconst loop = f => {\n    let acc = f ();\n    while (acc.type === recur) {\n        acc = f (...acc.args);\n    }\n    return acc;\n};\n\nexport const repeat = $n => f => x => loop((n = $n, acc = x) => n === 0 ? acc : recur (n - 1, f (acc)));\n\nexport const offsetToPage = (offset, limit = 10) => ((offset / limit) + 1);\n\nexport const pageToOffset = (page, limit = 10) => (page > 1 ? (page - 1) * limit : 0);\n","import {normalize, schema} from 'normalizr';\nimport {Random} from 'mockjs';\nimport {omit, uniq} from 'lodash/fp';\nimport {delay, repeat} from '../utils';\nimport {PAGE_SIZE_OF_POST_LIST} from '../config';\nimport {MyError} from './errors';\n\nconst post = new schema.Entity('posts');\nconst user = new schema.Entity('users');\n\nexport const getManyPost = ({page}) => delay(Math.ceil((Math.random() * 2)))\n    .then(() => {\n        const mockedPosts = [];\n\n        const createPosts = n => {\n            const mockedCommenters = [];\n\n            const createCommenters = n => {\n                mockedCommenters.push({\n                    id: Math.ceil((Math.random() * 20)),\n                    fullName: Random.name(),\n                    utime: (new Date()).toISOString(),\n                });\n                return n + 1;\n            };\n\n            repeat(5)(createCommenters)(1);\n\n            mockedPosts.push({\n                id: `${n}${Math.ceil((Math.random() * 2))}`,\n                title: `${Random.title()}${page}`,\n                author: {\n                    id: Math.ceil((Math.random() * 20)),\n                    fullName: Random.name(),\n                    utime: (new Date()).toISOString(),\n                },\n                commenters: uniq(mockedCommenters),\n                email: Random.email(),\n            });\n            return n + 1;\n        };\n\n        post.define({\n            author: user,\n            commenters: [user],\n        });\n\n        repeat(PAGE_SIZE_OF_POST_LIST)(createPosts)(page * PAGE_SIZE_OF_POST_LIST);\n\n        return {\n            request: {\n                meta: {page},\n            },\n            response: {\n                ...normalize(mockedPosts, [post]),\n            }\n        };\n    });\n\n\nexport const patchOnePost = ({...args}) => delay(Math.ceil((Math.random() * 4)))\n    .then(() => {\n        const mock = {\n            id: args.id,\n            star: true,\n            utime: (new Date()).toISOString(),\n        };\n\n        if (!(Number(args.id) % 3)) {\n            throw new MyError(JSON.stringify({\n                status: 400,\n                statusText: 'Bad Request',\n                body: '收藏失败',\n            }));\n        }\n\n        return {\n            request: {\n                data: {...omit(['id'], {...args})},\n                params: {id: args.id},\n            },\n            response: {\n                ...normalize(mock, post),\n            }\n        };\n    });\n\nexport const getOneUser = ({id}) => delay(Math.ceil((Math.random() * 3)))\n    .then(() => {\n        const mock = {\n            id,\n            fullName: Random.name(),\n            utime: (new Date()).toISOString(),\n        };\n\n        return {\n            request: {\n                params: {id},\n            },\n            response: {\n                ...normalize(mock, user),\n            }\n        };\n    });\n","export const PAGE_SIZE_OF_POST_LIST = 10;\nexport const LOCAL_STORAGE_REDUX_STORE_KEY = 'REDUX-SAGA-MATE-DEMO-REDUX-STORE';\n","import {all, takeEvery} from 'redux-saga/effects';\nimport {makeCreateDefaultWorker} from 'redux-saga-mate/src/saga';\nimport {MyError} from '../api/errors';\nimport * as ActionTypes from '../actions/types';\nimport * as Api from '../api';\n\nconst createDefaultWorker = makeCreateDefaultWorker([MyError, ActionTypes.CLEANUP]);\n\n// Notice!\n// If you need more complicated logic controls then the default worker saga,\n// you need to implement your own worker sagas.\nexport default function* () {\n    yield all([\n        takeEvery(ActionTypes.ASYNC_GET_MANY_POST, createDefaultWorker(Api.getManyPost)),\n        takeEvery(ActionTypes.ASYNC_PATCH_ONE_POST, createDefaultWorker(Api.patchOnePost)),\n        takeEvery(ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID, createDefaultWorker(\n            Api.getOneUser,\n            (state, action) => {\n                const {postId} = action.payload;\n                const {author} = state.entities.posts[postId];\n                return {id: author};\n            }\n        )),\n    ]);\n}\n","import _regeneratorRuntime from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { createAction } from 'redux-actions';\nimport { call, put, select } from 'redux-saga/effects';\nimport { idOfAction, isFinished, failWith, succeedWith } from './action'; // reducer和saga的执行顺序见下方issue\n// @see: https://github.com/redux-saga/redux-saga/issues/148\n\nexport var makeCreateDefaultWorker = function makeCreateDefaultWorker(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      ErrorType = _ref2[0],\n      CleanupActionType = _ref2[1];\n\n  return function (method, payload) {\n    return (\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action) {\n        var state, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!isFinished(action)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                _context.next = 5;\n                return select();\n\n              case 5:\n                state = _context.sent;\n                _context.next = 8;\n                return call(method, payload ? payload(state, action) : action.payload);\n\n              case 8:\n                json = _context.sent;\n                _context.next = 11;\n                return put(succeedWith(json)(action));\n\n              case 11:\n                _context.next = 13;\n                return put(createAction(CleanupActionType)(idOfAction(action)));\n\n              case 13:\n                _context.next = 22;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (!(_context.t0 instanceof ErrorType)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 20;\n                return put(failWith(_context.t0)(action));\n\n              case 20:\n                return _context.abrupt(\"return\");\n\n              case 21:\n                throw _context.t0 instanceof Error ? _context.t0 : new Error(JSON.stringify(_context.t0));\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 15]]);\n      })\n    );\n  };\n};","import _slicedToArray from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport Errio from 'errio';\nimport compose from 'ramda/src/compose';\nimport omit from 'ramda/src/omit';\nimport mergeDeepWithKey from 'ramda/src/mergeDeepWithKey';\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\nimport mergeWith from 'ramda/src/mergeWith';\nimport keys from 'ramda/src/keys';\nimport reduce from 'ramda/src/reduce';\nimport uniq from 'ramda/src/uniq';\nimport flatten from 'ramda/src/flatten';\nimport map from 'ramda/src/map';\nimport set from 'ramda/src/set';\nimport lensProp from 'ramda/src/lensProp';\nimport { isFinished } from './action';\nimport { UPDATE, DELETE } from './operation';\nvar DEFAULT_CLEANUP_ACTION_TYPE = 'CLEANUP_TRACKABLE_ACTION';\nvar DEFAULT_ASYNC_ACTION_TYPE_REGEX = /^(REST|API|LOAD|ASYNC|FETCH|AJAX)_[0-9A-Z_]+$/;\nexport var createActionsReducer = function createActionsReducer() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [DEFAULT_CLEANUP_ACTION_TYPE, DEFAULT_ASYNC_ACTION_TYPE_REGEX],\n      _ref2 = _slicedToArray(_ref, 2),\n      CleanupActionType = _ref2[0],\n      AsyncActionTypeRegex = _ref2[1];\n\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (action.type === CleanupActionType) {\n      return Array.isArray(action.payload) ? omit(action.payload, state) : omit([action.payload], state);\n    }\n\n    if (AsyncActionTypeRegex.test(action.type)) {\n      return set(lensProp(action.meta.id), mergeDeepRight(action, {\n        payload: action.error ? JSON.parse(Errio.stringify(action.payload)) : action.payload\n      }), state);\n    }\n\n    return state;\n  };\n};\nexport var createEntityTypeReducer = function createEntityTypeReducer(entityType, operations) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (operations[action.type] && isFinished(action) && !action.error) {\n      var _ref3 = Array.isArray(operations[action.type]) ? operations[action.type] : [operations[action.type]],\n          _ref4 = _slicedToArray(_ref3, 2),\n          operation = _ref4[0],\n          merger = _ref4[1];\n\n      if (operation === UPDATE) {\n        var getNewPayload = function getNewPayload() {\n          if (action.payload.response) {\n            return action.payload.response.entities[entityType];\n          }\n\n          return action.payload.entities[entityType];\n        };\n\n        if (merger) {\n          return mergeDeepWithKey(merger, state, getNewPayload());\n        }\n\n        return mergeDeepRight(state, getNewPayload());\n      }\n\n      if (operation === DELETE) {\n        return omit([action.payload.request.params.id])(state);\n      }\n    }\n\n    return state;\n  };\n};\nexport var createEntitiesReducer = function createEntitiesReducer(entityActionMap) {\n  return compose(reduce(function (reducers, entityType) {\n    return set(lensProp(entityType), createEntityTypeReducer(entityType, entityActionMap[entityType]), reducers);\n  }, {}), keys)(entityActionMap);\n};\n/**\n * [{key1: fn1}, {key1: fn11}, {key2: fn2}, {key2: fn22, key3: fn3}]\n * =>\n * {key1: [fn1, fn11], key2: [fn2, fn22], key3: [fn3]}\n */\n\nexport var groupByComposeByEntityType = function groupByComposeByEntityType() {\n  for (var _len = arguments.length, combinedReducers = new Array(_len), _key = 0; _key < _len; _key++) {\n    combinedReducers[_key] = arguments[_key];\n  }\n\n  var entityTypes = compose(uniq, flatten, map(keys))(combinedReducers);\n  var queuedCombinedReducers = reduce(function (newCombined, entityType) {\n    return set(lensProp(entityType), reduce(function (queue, combined) {\n      return combined[entityType] ? queue.concat([combined[entityType]]) : queue;\n    }, [], combinedReducers), newCombined);\n  }, {}, entityTypes);\n  var mergeQueuedReducers = compose(reduce(function (acc, cur) {\n    return set(lensProp(cur), reduce(function (final, reducer) {\n      return function (state, action) {\n        return reducer(final(state, action), action);\n      };\n    }, function (v) {\n      return v;\n    }, queuedCombinedReducers[cur]), acc);\n  }, {}), keys);\n  return mergeQueuedReducers(queuedCombinedReducers);\n};","import {combineReducers} from 'redux';\nimport posts from './posts';\n\nexport default combineReducers({\n    posts,\n});\n","import {isFinished} from 'redux-saga-mate/src/action';\nimport {compose, get, set} from 'lodash/fp';\nimport * as ActionTypes from '../../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ActionTypes.ASYNC_GET_MANY_POST: {\n            if (isFinished(action) && !action.error) {\n                const {payload: {request: {meta: {page}}, response: {result}}} = action;\n                const pathOfBuffer = [page, 'buffer'];\n                const pathOfIds = [page, 'ids'];\n                if (page > 3 && (get(pathOfIds, state) || []).length > 0) {\n                    return set(pathOfBuffer, result, state);\n                }\n                return set(pathOfIds, result, state);\n            }\n            return state;\n        }\n        case ActionTypes.ACCEPT_UPDATE_POST_LIST: {\n            const {payload: {page}} = action;\n            const pathOfBuffer = [page, 'buffer'];\n            const pathOfIds = [page, 'ids'];\n            const moveBufferToIds = compose(\n                set(pathOfBuffer, undefined),\n                set(pathOfIds, get(pathOfBuffer, state)),\n            );\n            return moveBufferToIds(state);\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {combineReducers} from 'redux';\nimport {concat, difference} from 'lodash/fp';\nimport {createActionsReducer, createEntitiesReducer, groupByComposeByEntityType} from 'redux-saga-mate/src/reducer';\nimport {UPDATE, DELETE} from 'redux-saga-mate/src/operation';\nimport * as ActionTypes from '../actions/types';\nimport ui from './ui';\n\nconst EntityActionMap = {\n    posts: {\n        [ActionTypes.ASYNC_GET_MANY_POST]: [\n            UPDATE,\n            (k, l, r) => (k === 'commenters' ? concat(l, difference(r, l)) : r),\n        ],\n        [ActionTypes.ASYNC_DELETE_ONE_POST]: DELETE,\n        [ActionTypes.ASYNC_PATCH_ONE_POST]: UPDATE,\n    },\n    users: {\n        [ActionTypes.ASYNC_GET_MANY_POST]: UPDATE,\n        [ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID]: UPDATE,\n    },\n};\n\nexport default combineReducers({\n    actions: createActionsReducer([ActionTypes.CLEANUP, /^ASYNC_/]),\n    session: (state = {}, action) => state,\n    entities: combineReducers(\n        groupByComposeByEntityType(\n            createEntitiesReducer(EntityActionMap),\n            {},\n        ),\n    ),\n    ui,\n});\n","export var UPDATE = 'UPDATE';\nexport var DELETE = 'DELETE';","import configureStore from './configureStore';\nimport {LOCAL_STORAGE_REDUX_STORE_KEY} from '../config';\n\nexport default configureStore(undefined, 'REDUX-SAGE-MATE-DEMO', LOCAL_STORAGE_REDUX_STORE_KEY);\n","/* global process */\n/* global module */\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport rootReducer from '../reducers';\n\nexport default (initialState = undefined, storeName = undefined, LS_KEY = 'REDUX-STORE') => {\n    let preloadedState;\n\n    try {\n        preloadedState = initialState\n            || JSON.parse(window.localStorage.getItem(LS_KEY))\n            || undefined;\n    } catch (e) {\n        console.log('The JSON data in Local Storage seems broken!');\n        preloadedState = undefined;\n    }\n\n    const composeEnhancers = composeWithDevTools({name: storeName});\n\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        composeEnhancers(applyMiddleware(\n            sagaMiddleware\n        )),\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    store.subscribe(() => window.localStorage.setItem(LS_KEY, JSON.stringify(store.getState())));\n\n    if (module.hot) {\n        module.hot.accept('../reducers', () => store.replaceReducer(rootReducer));\n    }\n\n    return store;\n};\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './index.module.scss';\nconst cx =classNames.bind(styles);\n\nconst PageNumber = ({page, onClick, selected}) => {\n    const handleClick = () => {\n        onClick(page);\n    };\n\n    return (\n        <span onClick={handleClick} className={cx({selected})}>{page}</span>\n    );\n};\n\nexport default ({page, onPage}) => (\n    <div className={cx('pagination')}>\n        <PageNumber page={1} onClick={onPage} selected={page === 1} />\n        <PageNumber page={2} onClick={onPage} selected={page === 2} />\n        <PageNumber page={3} onClick={onPage} selected={page === 3} />\n        <PageNumber page={4} onClick={onPage} selected={page === 4} />\n        <PageNumber page={5} onClick={onPage} selected={page === 5} />\n    </div>\n);\n","import React from 'react';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement(document.body);\n\nexport default ({isLoading, fullName, onCloseAuthorModal}) => (\n    <ReactModal\n        isOpen={true}\n        contentLabel=\"Author Infomation\"\n        style={{\n            content: {\n                width: '400px',\n                height: '100px',\n                fontSize: '24px',\n                textAlign: 'center',\n                margin: '30px auto',\n                paddingTop: '30px',\n            }\n        }}\n    >\n        {\n            isLoading && (\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            )\n        }\n        {fullName}{' '}\n        <button onClick={onCloseAuthorModal}>Close</button>\n    </ReactModal>\n);\n","import { createSelector } from 'reselect';\nimport prop from 'ramda/src/prop';\nimport keys from 'ramda/src/keys';\nimport omit from 'ramda/src/omit';\nimport set from 'ramda/src/set';\nimport lensProp from 'ramda/src/lensProp';\nimport { isFinished } from './action';\nexport var createSelectActions = function createSelectActions(selectActions, selectActionIds) {\n  return createSelector([selectActions, selectActionIds], function (actions, actionIds) {\n    var reduceRecursively = function reduceRecursively(actionIds) {\n      return keys(actionIds).reduce(function (acc, id) {\n        if (!actionIds[id]) {\n          return acc;\n        }\n\n        if (typeof actionIds[id] === 'string') {\n          if (!actions[actionIds[id]]) {\n            return acc;\n          }\n\n          var action = actions[actionIds[id]];\n          return set(lensProp(id), omit(['type', 'meta'], set(lensProp('isLoading'), !isFinished(action), action)), acc);\n        }\n\n        return set(lensProp(id), reduceRecursively(actionIds[id]), acc);\n      }, {});\n    };\n\n    return reduceRecursively(actionIds);\n  });\n};","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './index.module.scss';\nconst cx =classNames.bind(styles);\n\nexport default ({\n    id,\n    title,\n    author,\n    commenters,\n    email,\n    star,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    isChecked,\n    onToggleCheck,\n}) => {\n    const handleStar = () => {\n        onStar(id);\n    };\n\n    const handleConfirmError = () => {\n        onClearStarLoading(id);\n    };\n\n    const handleViewAuthor = () => {\n        onViewAuthor(id);\n    }\n\n    const handleToggleCheck = () => {\n        onToggleCheck(id);\n    }\n\n    return (\n        <tr>\n            <th scope=\"row\">\n                <input type=\"checkbox\" checked={isChecked} onChange={handleToggleCheck} />\n                {' '}\n                {id}\n            </th>\n            <td>{title}</td>\n            <td className={cx('operation')}>\n                {author}{' '}\n                <span className=\"oi oi-eye\" onClick={handleViewAuthor}></span>\n                {' '}({commenters.length})\n            </td>\n            <td>{email}</td>\n            <td className={cx('operation')}>\n                {' '}\n                {\n                    onStarTransient && onStarTransient.isLoading && (\n                        <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    )\n                }\n                {\n                    (!onStarTransient || !onStarTransient.isLoading) && (\n                        <span className={cx('oi', 'oi-star', {star})} onClick={handleStar}></span>\n                    )\n                }\n                {' '}\n                {\n                    (onStarTransient && !onStarTransient.isLoading && onStarTransient.error) && (\n                        <span className={cx('error')} onClick={handleConfirmError}>Failed!</span>\n                    )\n                }\n            </td>\n        </tr>\n    );\n};\n","import _objectSpread from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/hanzhixing/workspace/github/hanzhixing/redux-saga-mate/demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport { compose, withProps, withStateHandlers, renderComponent, wrapDisplayName } from 'recompose';\nimport identity from 'ramda/src/identity';\nimport set from 'ramda/src/set';\nimport lensPath from 'ramda/src/lensPath';\nvar withStates = withStateHandlers(function () {\n  return {\n    actionIds: {}\n  };\n}, {\n  setActionId: function setActionId(state, props) {\n    return function (key, actionId) {\n      var lens = Array.isArray(key) ? lensPath(['actionIds'].concat(_toConsumableArray(key))) : lensPath(['actionIds', key]);\n      return set(lens, actionId, state);\n    };\n  },\n  unsetActionId: function unsetActionId(state, props) {\n    return function (key) {\n      var lens = Array.isArray(key) ? lensPath(['actionIds'].concat(_toConsumableArray(key))) : lensPath(['actionIds', key]);\n      return set(lens, undefined, state);\n    };\n  }\n});\nexport var withAsyncActionStateHandler = function withAsyncActionStateHandler() {\n  var mapToProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : identity;\n  return compose(withStates, withProps(mapToProps));\n};\nexport var createAsyncActionContext = function createAsyncActionContext() {\n  var _React$createContext = React.createContext(undefined),\n      Provider = _React$createContext.Provider,\n      Consumer = _React$createContext.Consumer;\n\n  var withAsyncActionContextProvider = function withAsyncActionContextProvider(ComponentIn) {\n    var ComponentOut = function ComponentOut(_ref) {\n      var actionIds = _ref.actionIds,\n          setActionId = _ref.setActionId,\n          unsetActionId = _ref.unsetActionId,\n          rest = _objectWithoutProperties(_ref, [\"actionIds\", \"setActionId\", \"unsetActionId\"]);\n\n      return React.createElement(Provider, {\n        value: {\n          actionIds: actionIds,\n          setActionId: setActionId,\n          unsetActionId: unsetActionId\n        }\n      }, React.createElement(ComponentIn, rest));\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withAsyncActionContextProvider');\n    return withStates(ComponentOut);\n  };\n\n  var withAsyncActionContextConsumer = function withAsyncActionContextConsumer(ComponentIn) {\n    var ComponentOut = function ComponentOut(props) {\n      return React.createElement(Consumer, null, function (context) {\n        return React.createElement(ComponentIn, _objectSpread({}, props, context));\n      });\n    };\n\n    ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withAsyncActionContextConsumer');\n    return ComponentOut;\n  };\n\n  return {\n    withAsyncActionContextProvider: withAsyncActionContextProvider,\n    withAsyncActionContextConsumer: withAsyncActionContextConsumer\n  };\n};","import {createAsyncActionContext} from 'redux-saga-mate/src/hoc';\n\nexport const {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n} = createAsyncActionContext();\n\nexport const mapAsyncActionProps = ({actionIds, setActionId, unsetActionId}) => {\n    return ({\n        actionIds,\n        onTrackAsyncAction: setActionId,\n        onUntrackAsyncAction: unsetActionId,\n    });\n}\n","import {createSelector} from 'reselect';\nimport {get} from 'lodash/fp';\nimport {createSelectActions} from 'redux-saga-mate/src/selector';\n\nexport const selectPostIds = (state, props) => get(['ui', 'posts', props.page, 'ids'], state);\nexport const selectBufferPostIds = (state, props) => get(['ui', 'posts', props.page, 'buffer'], state);\nexport const selectModalPost = (state, props) => get([props.modalPostAuthor], state.entities.posts);\n\nexport const selectUsers = (state, props) => state.entities.users;\n\nexport const selectPosts = createSelector(\n    (state, props) => state.entities.posts,\n    selectPostIds,\n    selectUsers,\n    (posts, ids, users) => {\n        if (ids) {\n            return ids.map(id => ({\n                ...posts[String(id)],\n                author: users[posts[String(id)].author].fullName,\n            }));\n        }\n        return undefined;\n    },\n);\n\nexport const selectPostsBuffer = createSelector(\n    selectBufferPostIds,\n    selectPostIds,\n    (buffer, ids) => {\n        if (!buffer || !ids) {\n            return [];\n        }\n        return buffer.filter(id => !ids.includes(id));\n    },\n);\n\nexport const selectActions = createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nexport const selectModalAuthor = createSelector(\n    selectModalPost,\n    selectUsers,\n    selectActions,\n    (post, users, actions) => {\n        const {isLoading} = actions.onViewAuthor ? actions.onViewAuthor : {isLoading: undefined};\n\n        if (isLoading) {\n            return {isLoading};\n        }\n\n        return {\n            isLoading,\n            ...post ? get([post.author], users) : {},\n        };\n    },\n);\n\nexport const selectTransientOfOnPage = createSelector(\n    selectActions,\n    (state, props) => props.page,\n    (actions, page) => {\n        if (!actions.onPage || !actions.onPage[page]) {\n            return undefined;\n        }\n        return actions.onPage[page];\n    }\n);\n\nexport const selectTransientOfOnStar = createSelector(\n    selectActions,\n    actions => {\n        if (!actions.onStar || !actions.onStar) {\n            return undefined;\n        }\n        return actions.onStar;\n    }\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate/src/action';\nimport Placeholder from '../../components/PostList/Placeholder';\nimport Loading from '../../components/PostList/Loading';\nimport NoData from '../../components/PostList/NoData';\nimport DataRows from '../../components/PostList/DataRows';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage, selectTransientOfOnStar} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    selectTransientOfOnStar,\n    (items, buffer, onPageTransient, onStarTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n        onStarTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onStar: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n        props.onTrackAsyncAction(['onStar', id], actionId);\n    },\n    onViewAuthor: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID)({\n            postId: id,\n        })));\n        props.onTrackAsyncAction('onViewAuthor', actionId);\n        props.onViewAuthor(id);\n    },\n    onClearStarLoading: id => {\n        props.onUntrackAsyncAction(['onStar', id]);\n        dispatch(createAction(ActionTypes.CLEANUP)(props.actionIds.onStar[id]));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybePlaceholder = branch(\n    ({items, onPageTransient}) => (!items && !onPageTransient),\n    renderComponent(Placeholder),\n);\n\nconst maybeLoading = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && onPageTransient.isLoading),\n    renderComponent(Loading),\n);\n\nconst maybeNoData = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && !onPageTransient.isLoading),\n    renderComponent(NoData),\n);\n\nconst maybeNotDataRows = compose(maybeNoData, maybePlaceholder, maybeLoading);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotDataRows,\n)(DataRows);\n","import React from 'react';\n\nexport default () => (\n    <>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n    </>\n);\n","import React from 'react';\nimport {repeat} from '../../utils';\n\nexport default () => {\n    const rows = [];\n\n    const loading = n => (\n        <tr key={n}>\n            <td colSpan=\"5\" className=\"text-center\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    );\n\n    const makeLoading = n => {\n        rows.push(loading(n));\n        return n + 1;\n    };\n\n    repeat(10)(makeLoading)(1);\n\n    return rows;\n}\n","import React from 'react';\n\nexport default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">没有符合条件的数据!</td></tr>\n);\n","import React from 'react';\nimport {get} from 'lodash/fp';\nimport DataRow from './DataRow';\n\nexport default ({\n    page,\n    items,\n    selected,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    onToggleCheck,\n    transients,\n}) => {\n    return items.map(item => (\n        <DataRow\n            key={item.id}\n            {...item}\n            isChecked={(selected || []).includes(item.id)}\n            onStar={onStar}\n            onStarTransient={get(item.id, onStarTransient)}\n            onViewAuthor={onViewAuthor}\n            onToggleCheck={onToggleCheck}\n            onClearStarLoading={onClearStarLoading}\n        />\n    ));\n};\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './index.module.scss';\nconst cx =classNames.bind(styles);\n\nexport default ({buffer, onAccept}) => (\n    <tr key=\"buffer\">\n        <td colSpan=\"5\" className=\"text-center\">\n            {`${buffer.length} new records, click to`}\n            {' '}\n            <span onClick={onAccept} className={cx('accept')}>accpet!</span>\n        </td>\n    </tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport LoadingBuffer from '../../components/PostList/LoadingBuffer';\nimport Buffer from '../../components/PostList/Buffer';\nimport Empty from '../../components/PostList/Empty';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    (items, buffer, onPageTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onAccept: () => {\n        dispatch(createAction(ActionTypes.ACCEPT_UPDATE_POST_LIST)({page: props.page}));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybeBufferLoading = branch(\n    ({items, buffer, onPageTransient}) => (\n        items && onPageTransient && onPageTransient.isLoading\n    ),\n    renderComponent(LoadingBuffer),\n);\n\nconst maybeNothing = branch(\n    ({items, buffer, onPageTransient}) => (\n        !items\n            || (items && !buffer.length && !onPageTransient)\n            || (items && onPageTransient && !onPageTransient.isLoading && !buffer.length)\n    ),\n    renderComponent(Empty),\n);\n\nconst maybeNotBuffer = compose(\n    maybeBufferLoading,\n    maybeNothing,\n);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotBuffer\n)(Buffer);\n","import React from 'react';\n\nexport default () => (\n    <tr>\n        <td colSpan=\"5\" className=\"text-center\">\n            <div className=\"text-center\">\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </td>\n    </tr>\n);\n","import React from 'react';\n\nexport default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate/src/action';\n// import {\n//     withAsyncActionStateHandler,\n//     createAsyncActionContext,\n// } from 'redux-saga-mate/src/hoc';\nimport {delay} from '../../utils';\nimport PostList from '../../components/PostList';\nimport {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    mapAsyncActionProps,\n} from './actions';\nimport {selectActions, selectPosts, selectPostsBuffer, selectModalAuthor} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectActions,\n    selectModalAuthor,\n    (posts, buffer, transients, modalAuthorInfo) => ({\n        items: posts,\n        buffer,\n        transients,\n        modalAuthorInfo,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onPage: page => {\n        props.setPage(page);\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_MANY_POST)({\n            page,\n        })));\n        props.onTrackAsyncAction(['onPage', page], actionId);\n    },\n    onCloseAuthorModal: () => {\n        props.setModalPostAuthor(undefined);\n    },\n    onBatchStar: () => {\n        props.selected.forEach(id => {\n            const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n            props.onTrackAsyncAction(['onStar', id], actionId);\n        });\n    },\n    onToggleCheck: id => {\n        if (props.selected.includes(id)) {\n            props.setSelected(props.selected.filter(item => item !== id));\n        } else {\n            props.setSelected([...props.selected, id]);\n        }\n    },\n    onViewAuthor: id => {\n        props.setModalPostAuthor(id);\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst withLifecycle = lifecycle({\n    componentDidMount() {\n        delay(2).then(() => {\n            this.props.onPage(1);\n        });\n    }\n});\n\nconst withLiftedStates = compose(\n    withState('selected', 'setSelected', []),\n    withState('page', 'setPage', 1),\n    withState('modalPostAuthor', 'setModalPostAuthor', undefined),\n);\n\n// const withAsyncAction = withAsyncActionStateHandler(({actionIds, setActionId, unsetActionId}) => ({\n//     actionIds,\n//     onTrackAsyncAction: setActionId,\n//     onUntrackAsyncAction: unsetActionId,\n// }));\n\n// export default compose(withLiftedStates, withAsyncAction, withRedux, withLifecycle)(PostList);\n\nexport default compose(\n    withLiftedStates,\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    withLifecycle,\n)(PostList);\n","import React from 'react';\nimport Pager from './Pager';\nimport AuthorModal from './AuthorModal';\nimport MaybeDataRows from '../../connects/PostList/MaybeDataRows';\nimport MaybeBuffer from '../../connects/PostList/MaybeBuffer';\n\nexport default ({\n    modalPostAuthor,\n    modalAuthorInfo,\n    page,\n    selected,\n    onPage,\n    onToggleCheck,\n    onCloseAuthorModal,\n    onBatchStar,\n    onTrackAsyncAction,\n    onUntrackAsyncAction,\n    onViewAuthor,\n}) => (\n    <div className=\"mx-auto\" style={{marginTop: '50px', width: '1200px'}}>\n        <table className=\"table table-md\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author/Commenter Number</th>\n                    <th scope=\"col\">E-mail</th>\n                    <th scope=\"col\" style={{width: '200px'}}>Operation</th>\n                </tr>\n            </thead>\n            <tbody>\n                <MaybeDataRows\n                    page={page}\n                    selected={selected}\n                    onToggleCheck={onToggleCheck}\n                    onTrackAsyncAction={onTrackAsyncAction}\n                    onUntrackAsyncAction={onUntrackAsyncAction}\n                    onViewAuthor={onViewAuthor}\n                />\n                <MaybeBuffer page={page} />\n            </tbody>\n        </table>\n        <div><button onClick={onBatchStar}>Star selected</button><br /><br /></div>\n        <Pager onPage={onPage} page={page} />\n        {!!modalPostAuthor && (<AuthorModal {...modalAuthorInfo} onCloseAuthorModal={onCloseAuthorModal} />)}\n    </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'open-iconic/font/css/open-iconic-bootstrap.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from '../../store';\nimport PostList from '../../connects/PostList';\n\nexport default () => (\n    <Provider store={store}>\n        <header>\n            <a href=\"https://github.com/hanzhixing/redux-saga-mate.git\">\n                <svg height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\">\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                    >\n                    </path>\n                </svg>\n            </a>\n        </header>\n        <div><PostList /></div>\n    </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"operation\":\"PostList_operation__2xipO\",\"error\":\"PostList_error__oaqnz\",\"star\":\"PostList_star__20vgO\",\"pagination\":\"PostList_pagination__1X3wd\",\"selected\":\"PostList_selected__57YD_\",\"accept\":\"PostList_accept__3AtYk\"};"],"sourceRoot":""}