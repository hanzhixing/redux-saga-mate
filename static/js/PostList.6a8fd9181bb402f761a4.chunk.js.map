{"version":3,"sources":["components/PostList/index.m.scss","components/PostList/Pager.jsx","components/PostList/AuthorModal.jsx","components/PostList/DataRow.jsx","components/PostList/DataRows.jsx","connects/PostList/actions.js","connects/PostList/selectors.js","connects/PostList/MaybeDataRows.js","components/PostList/Placeholder.jsx","components/PostList/Loading.jsx","components/PostList/NoData.jsx","connects/PostList/MaybeBuffer.js","components/PostList/LoadingBuffer.jsx","components/PostList/Empty.jsx","components/PostList/Buffer.jsx","connects/PostList/index.js","components/PostList/index.jsx"],"names":["classNames","__webpack_require__","locals","css","bind","style","module","exports","PageNumber","_ref","page","active","react_default","a","createElement","className","cx","aria-current","undefined","react_router_dom","to","concat","e2e","Pager","_ref2","aria-label","map","i","Pager_PageNumber","key","ReactModal","setAppElement","document","body","AuthorModal","isLoading","fullName","onCloseAuthorModal","lib_default","isOpen","contentLabel","content","width","height","fontSize","textAlign","margin","paddingTop","role","type","onClick","DataRow","id","title","author","commenters","email","star","onStar","onStarTransient","onClearStarLoading","onViewAuthor","isChecked","onToggleCheck","scope","checked","onChange","length","error","createAsyncActionContext","withAsyncActionContextProvider","withAsyncActionContextConsumer","mapAsyncActionProps","actionIds","onTrackAsyncAction","setActionId","onUntrackAsyncAction","unsetActionId","selectPostIds","state","props","get","selectUsers","entities","users","selectPosts","createSelector","posts","ids","_objectSpread","String","selectPostsBuffer","buffer","filter","includes","selectActions","createSelectActions","selectModalAuthor","modalPostAuthor","post","actions","selectTransientOfOnPage","onPage","selectTransientOfOnStar","withRedux","connect","selectProps","items","onPageTransient","dispatch","actionId","idOfAction","createAsyncAction","ActionTypes","postId","createAction","maybePlaceholder","branch","renderComponent","Fragment","colSpan","maybeLoading","rows","repeat","n","push","loading","maybeNoData","_ref3","maybeNotDataRows","compose","withProps","selected","transients","item","_extends","onAccept","maybeBufferLoading","maybeNothing","maybeNotBuffer","modalAuthorInfo","Number","setModalPostAuthor","onBatchStar","forEach","setSelected","_toConsumableArray","withLifecycle","lifecycle","componentDidMount","this","controller","AbortController","_this$props","delay","signal","then","componentDidUpdate","prevProps","_this$props2","componentWillUnmount","abort","withLiftedStates","withState","withRouter","MaybeDataRows","MaybeBuffer","PostList_extends"],"mappings":"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","file":"static/js/PostList.6a8fd9181bb402f761a4.chunk.js","sourcesContent":["\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-2!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/lib/loader.js??ref--5-oneOf-6-4!./index.m.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) css[style] = locals[style];\n        module.exports = css;\n    ","import {NavLink} from 'react-router-dom';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nconst PageNumber = ({page, active}) => (\n    <li className={cx('page-item', {active})} aria-current={active ? 'page' : undefined}>\n        <NavLink\n            to={`/post-list/${page}`}\n            className={cx('page-link', e2e(`page-${page}`))}\n        >\n            {page}\n            {active && (<span className=\"sr-only\">(current)</span>)}\n        </NavLink>\n    </li>\n);\n\nexport default ({page}) => (\n    <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n            {\n                [1, 2, 3, 4, 5].map(i => (\n                    <PageNumber key={i} page={i} active={i === page} />\n                ))\n            }\n        </ul>\n    </nav>\n);\n","import ReactModal from 'react-modal';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nReactModal.setAppElement(document.body);\n\nexport default ({isLoading, fullName, onCloseAuthorModal}) => (\n    <ReactModal\n        isOpen={true}\n        contentLabel=\"Author Infomation\"\n        style={{\n            content: {\n                width: '400px',\n                height: '100px',\n                fontSize: '24px',\n                textAlign: 'center',\n                margin: '30px auto',\n                paddingTop: '30px',\n            }\n        }}\n    >\n        {\n            isLoading && (\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            )\n        }\n        {fullName}\n        {' '}\n        <button\n            type=\"button\"\n            onClick={onCloseAuthorModal}\n            className={cx('btn btn-primary btn-sm', e2e('global-author-modal'))}\n        >\n            Close\n        </button>\n    </ReactModal>\n);\n","import {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nexport default ({\n    id,\n    title,\n    author,\n    commenters,\n    email,\n    star,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    isChecked,\n    onToggleCheck,\n}) => {\n    const handleStar = () => {\n        onStar(id);\n    };\n\n    const handleConfirmError = () => {\n        onClearStarLoading(id);\n    };\n\n    const handleViewAuthor = () => {\n        onViewAuthor(id);\n    }\n\n    const handleToggleCheck = () => {\n        onToggleCheck(id);\n    }\n\n    return (\n        <tr>\n            <th scope=\"row\">\n                <input type=\"checkbox\" checked={isChecked} onChange={handleToggleCheck} />\n                {' '}\n                {id}\n            </th>\n            <td>{title}</td>\n            <td className={cx('operation')}>\n                {author}\n                {' '}\n                <button\n                    type=\"button\"\n                    onClick={handleViewAuthor}\n                    className={cx('oi oi-eye', 'no-border', e2e('view-author'))}\n                />\n                {' '}\n                {commenters.length}\n            </td>\n            <td>{email}</td>\n            <td className={cx('operation')}>\n                {' '}\n                {\n                    onStarTransient && onStarTransient.isLoading && (\n                        <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    )\n                }\n                {\n                    (!onStarTransient || !onStarTransient.isLoading) && (\n                        <button\n                            type=\"button\"\n                            onClick={handleStar}\n                            className={cx('oi oi-star', 'no-border', {star}, e2e('star-post'))}\n                        />\n                    )\n                }\n                {' '}\n                {\n                    (onStarTransient && !onStarTransient.isLoading && onStarTransient.error) && (\n                        <button\n                            type=\"button\"\n                            className={cx('error', 'no-border', e2e('confirm-star-error'))}\n                            onClick={handleConfirmError}\n                        >\n                            Failed! Click to Dimiss!\n                        </button>\n                    )\n                }\n            </td>\n        </tr>\n    );\n};\n","import {get} from 'lodash/fp';\nimport DataRow from './DataRow';\n\nexport default ({\n    page,\n    items,\n    selected,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    onToggleCheck,\n    transients,\n}) =>items.map(item => (\n    <DataRow\n        key={item.id}\n        {...item}\n        isChecked={(selected || []).includes(item.id)}\n        onStar={onStar}\n        onStarTransient={get(item.id, onStarTransient)}\n        onViewAuthor={onViewAuthor}\n        onToggleCheck={onToggleCheck}\n        onClearStarLoading={onClearStarLoading}\n    />\n));\n","import {createAsyncActionContext} from 'redux-saga-mate';\n\nexport const {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n} = createAsyncActionContext();\n\nexport const mapAsyncActionProps = ({actionIds, setActionId, unsetActionId}) => ({\n    actionIds,\n    onTrackAsyncAction: setActionId,\n    onUntrackAsyncAction: unsetActionId,\n});\n","import {createSelector} from 'reselect';\nimport {get} from 'lodash/fp';\nimport {createSelectActions} from 'redux-saga-mate';\n\nexport const selectPostIds = (state, props) => get(['ui', 'posts', props.page, 'ids'], state);\nexport const selectBufferPostIds = (state, props) => get(['ui', 'posts', props.page, 'buffer'], state);\nexport const selectModalPost = (state, props) => get([props.modalPostAuthor], state.entities.posts);\n\nexport const selectUsers = (state, props) => state.entities.users;\n\nexport const selectPosts = createSelector(\n    (state, props) => state.entities.posts,\n    selectPostIds,\n    selectUsers,\n    (posts, ids, users) => {\n        if (ids) {\n            return ids.map(id => ({\n                ...posts[String(id)],\n                author: users[posts[String(id)].author].fullName,\n            }));\n        }\n        return undefined;\n    },\n);\n\nexport const selectPostsBuffer = createSelector(\n    selectBufferPostIds,\n    selectPostIds,\n    (buffer, ids) => {\n        if (!buffer || !ids) {\n            return [];\n        }\n        return buffer.filter(id => !ids.includes(id));\n    },\n);\n\nexport const selectActions = createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nexport const selectModalAuthor = createSelector(\n    selectModalPost,\n    selectUsers,\n    selectActions,\n    (post, users, actions) => {\n        const {isLoading} = actions.onViewAuthor ? actions.onViewAuthor : {isLoading: undefined};\n\n        if (isLoading) {\n            return {isLoading};\n        }\n\n        return {\n            isLoading,\n            ...post ? get([post.author], users) : {},\n        };\n    },\n);\n\nexport const selectTransientOfOnPage = createSelector(\n    selectActions,\n    (state, props) => props.page,\n    (actions, page) => {\n        if (!actions.onPage || !actions.onPage[page]) {\n            return undefined;\n        }\n        return actions.onPage[page];\n    }\n);\n\nexport const selectTransientOfOnStar = createSelector(\n    selectActions,\n    actions => {\n        if (!actions.onStar || !actions.onStar) {\n            return undefined;\n        }\n        return actions.onStar;\n    }\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate';\nimport Placeholder from '../../components/PostList/Placeholder';\nimport Loading from '../../components/PostList/Loading';\nimport NoData from '../../components/PostList/NoData';\nimport DataRows from '../../components/PostList/DataRows';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage, selectTransientOfOnStar} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    selectTransientOfOnStar,\n    (items, buffer, onPageTransient, onStarTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n        onStarTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onStar: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n        props.onTrackAsyncAction(['onStar', id], actionId);\n    },\n    onViewAuthor: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID)({\n            postId: id,\n        })));\n        props.onTrackAsyncAction('onViewAuthor', actionId);\n        props.onViewAuthor(id);\n    },\n    onClearStarLoading: id => {\n        props.onUntrackAsyncAction(['onStar', id]);\n        dispatch(createAction(ActionTypes.CLEANUP)(props.actionIds.onStar[id]));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybePlaceholder = branch(\n    ({items, onPageTransient}) => (!items && !onPageTransient),\n    renderComponent(Placeholder),\n);\n\nconst maybeLoading = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && onPageTransient.isLoading),\n    renderComponent(Loading),\n);\n\nconst maybeNoData = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && !onPageTransient.isLoading),\n    renderComponent(NoData),\n);\n\nconst maybeNotDataRows = compose(maybeNoData, maybePlaceholder, maybeLoading);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotDataRows,\n)(DataRows);\n","export default () => (\n    <>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n    </>\n);\n","import {repeat} from '../../utils';\n\nexport default () => {\n    const rows = [];\n\n    const loading = n => (\n        <tr key={n}>\n            <td colSpan=\"5\" className=\"text-center\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    );\n\n    const makeLoading = n => {\n        rows.push(loading(n));\n        return n + 1;\n    };\n\n    repeat(10)(makeLoading)(1);\n\n    return rows;\n}\n","export default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">没有符合条件的数据!</td></tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport LoadingBuffer from '../../components/PostList/LoadingBuffer';\nimport Buffer from '../../components/PostList/Buffer';\nimport Empty from '../../components/PostList/Empty';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    (items, buffer, onPageTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onAccept: () => {\n        dispatch(createAction(ActionTypes.ACCEPT_UPDATE_POST_LIST)({page: props.page}));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybeBufferLoading = branch(\n    ({items, buffer, onPageTransient}) => (\n        items && onPageTransient && onPageTransient.isLoading\n    ),\n    renderComponent(LoadingBuffer),\n);\n\nconst maybeNothing = branch(\n    ({items, buffer, onPageTransient}) => (\n        !items\n            || (items && !buffer.length && !onPageTransient)\n            || (items && onPageTransient && !onPageTransient.isLoading && !buffer.length)\n    ),\n    renderComponent(Empty),\n);\n\nconst maybeNotBuffer = compose(\n    maybeBufferLoading,\n    maybeNothing,\n);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotBuffer\n)(Buffer);\n","export default () => (\n    <tr>\n        <td colSpan=\"5\" className=\"text-center\">\n            <div className=\"text-center\">\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </td>\n    </tr>\n);\n","export default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n);\n","import {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nexport default ({buffer, onAccept}) => (\n    <tr key=\"buffer\">\n        <td colSpan=\"5\" className=\"text-center\">\n            {`${buffer.length} new records, click to`}\n            {' '}\n            <button\n                type=\"button\"\n                onClick={onAccept}\n                className={cx('btn btn-outline-primary btn-sm', e2e('accept-new-buffer'))}\n            >\n                accpet!\n            </button>\n        </td>\n    </tr>\n);\n","import {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport PostList from '../../components/PostList';\nimport {withAsyncActionContextProvider, withAsyncActionContextConsumer, mapAsyncActionProps} from './actions';\nimport {selectActions, selectPosts, selectPostsBuffer, selectModalAuthor} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeMapStateToProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectActions,\n    selectModalAuthor,\n    (state, props) => props.page,\n    (posts, buffer, transients, modalAuthorInfo, page) => ({\n        page: Number(page),\n        items: posts,\n        buffer,\n        transients,\n        modalAuthorInfo,\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => {\n    // console.log(props);\n    return {\n        onPage: page => {\n            const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_MANY_POST)({\n                page,\n            })));\n            props.onTrackAsyncAction(['onPage', page], actionId);\n        },\n        onCloseAuthorModal: () => {\n            props.setModalPostAuthor(undefined);\n        },\n        onBatchStar: () => {\n            props.selected.forEach(id => {\n                const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n                props.onTrackAsyncAction(['onStar', id], actionId);\n            });\n        },\n        onToggleCheck: id => {\n            if (props.selected.includes(id)) {\n                props.setSelected(props.selected.filter(item => item !== id));\n            } else {\n                props.setSelected([...props.selected, id]);\n            }\n        },\n        onViewAuthor: id => {\n            props.setModalPostAuthor(id);\n        },\n    };\n};\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst withLifecycle = lifecycle({\n    componentDidMount() {\n        this.controller = new AbortController();\n\n        const {page, onPage} = this.props;\n\n        delay(2, this.controller.signal).then(() => (onPage(page)));\n    },\n    componentDidUpdate(prevProps) {\n        const {page, onPage} = this.props;\n\n        if (prevProps.page === page) {\n            return;\n        }\n\n        delay(2, this.controller.signal).then(() => (onPage(page)));\n    },\n    componentWillUnmount() {\n        this.controller.abort();\n    },\n});\n\nconst withLiftedStates = compose(\n    withState('selected', 'setSelected', []),\n    withState('modalPostAuthor', 'setModalPostAuthor', undefined),\n);\n\nexport default withRouter(compose(\n    withLiftedStates,\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    withLifecycle,\n)(PostList));\n","import Pager from './Pager';\nimport AuthorModal from './AuthorModal';\nimport MaybeDataRows from '../../connects/PostList/MaybeDataRows';\nimport MaybeBuffer from '../../connects/PostList/MaybeBuffer';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nexport default ({\n    page,\n    modalPostAuthor,\n    modalAuthorInfo,\n    selected,\n    onToggleCheck,\n    onCloseAuthorModal,\n    onBatchStar,\n    onTrackAsyncAction,\n    onUntrackAsyncAction,\n    onViewAuthor,\n}) => (\n    <div className=\"mx-auto\">\n        <table className=\"table\">\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author/Commenter Number</th>\n                    <th scope=\"col\">E-mail</th>\n                    <th scope=\"col\" style={{width: '200px'}}>Operation</th>\n                </tr>\n            </thead>\n            <tbody>\n                <MaybeDataRows\n                    page={page}\n                    selected={selected}\n                    onToggleCheck={onToggleCheck}\n                    onTrackAsyncAction={onTrackAsyncAction}\n                    onUntrackAsyncAction={onUntrackAsyncAction}\n                    onViewAuthor={onViewAuthor}\n                />\n                <MaybeBuffer page={page} />\n            </tbody>\n        </table>\n        <div>\n            <button\n                type=\"button\"\n                onClick={onBatchStar}\n                className={cx('btn btn-primary btn-sm', e2e('batch-star'))}\n            >\n                Star selected\n            </button>\n            <br />\n            <br />\n        </div>\n        <Pager page={page} />\n        {!!modalPostAuthor && (<AuthorModal {...modalAuthorInfo} onCloseAuthorModal={onCloseAuthorModal} />)}\n    </div>\n);\n"],"sourceRoot":""}