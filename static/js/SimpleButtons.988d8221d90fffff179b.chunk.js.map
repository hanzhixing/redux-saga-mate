{"version":3,"sources":["../../node_modules/react-hot-loader/root.js","components/SimpleButtons/index.m.scss","connects/SimpleButtons/ClickLoadingSuccess.js","components/SimpleButtons/ClickLoadingSuccess.jsx","connects/SimpleButtons/ClickLoadingError.js","components/SimpleButtons/ClickLoadingError.jsx","components/SimpleButtons/ClickLoading.jsx","connects/SimpleButtons/ClickLoading1.js","connects/SimpleButtons/ClickLoading2.js","connects/SimpleButtons/ClickLoading3.js","components/SimpleButtons/index.jsx"],"names":["exports","hot","a","classNames","__webpack_require__","locals","css","bind","style","hasOwnProperty","Object","defineProperty","value","module","withRedux","connect","createSelector","createSelectActions","get","state","props","actionIds","actions","clicked","onClick","loading","error","dispatch","actionId","idOfAction","createAsyncAction","ActionTypes","to","setActionId","onReset","unsetActionId","compose","withAsyncActionStateHandler","_ref","react_default","createElement","type","disabled","className","cx","btn-primary","btn-success","undefined","role","aria-hidden","createAction","btn-danger","ClickLoading","id","concat","action","foo","createAsyncActionUnique","Fragment","SimpleButtons_ClickLoadingSuccess","SimpleButtons_ClickLoadingError","ClickLoading1","ClickLoading2","ClickLoading3"],"mappings":"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","file":"static/js/SimpleButtons.988d8221d90fffff179b.chunk.js","sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n  var hot = require('./index').hot;\n  if (module.hot) {\n    var cache = require.cache;\n\n    if (!module.parents || module.parents.length === 0) {\n      throw new Error(\n        'React-Hot-Loader: `react-hot-loader/root` is not supported on your system. ' +\n        'Please use `import {hot} from \"react-hot-loader\"` instead'\n      );\n    }\n    // access parent\n    var parent = cache[module.parents[0]];\n    if (!parent) {\n      throw new Error(\n        'React-Hot-Loader: `react-hot-loader/root` is not supported on your system. ' +\n        'Please use `import {hot} from \"react-hot-loader\"` instead'\n      );\n    }\n    // remove self from a cache\n    delete cache[module.id];\n  }\n  // setup hot for caller\n  exports.hot = hot(parent);\n} else {\n  // prod mode\n  exports.hot = function (a) {\n    return a;\n  };\n}\n","\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-6-2!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/lib/loader.js??ref--5-oneOf-6-4!./index.m.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) {\n            if (!locals.hasOwnProperty(style)) {\n                continue;\n            }\n            if (typeof Object.defineProperty === 'function') {\n                Object.defineProperty(css, style, {value: locals[style]});\n            }\n            else {\n                css[style] = locals[style];\n            }\n        }\n        module.exports = css;\n    ","import {connect} from 'react-redux';\nimport {get} from 'lodash/fp';\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction, createSelectActions, withAsyncActionStateHandler} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport * as ActionTypes from '../../actions/types';\nimport ClickLoadingSuccess from '../../components/SimpleButtons/ClickLoadingSuccess';\n\nexport const selectActions = () => createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nconst makeMapStateToProps = () => createSelector(\n    selectActions(),\n    (state, props) => props.actionIds,\n    (actions, actionIds) => ({\n        clicked: !!actionIds.onClick,\n        loading: get(['onClick', 'isLoading'], actions),\n        error: get(['onClick', 'error'], actions),\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => {\n        const actionId = idOfAction(dispatch(\n            createAsyncAction(ActionTypes.ASYNC_NOOP)({to: 'success'})\n        ));\n        props.setActionId('onClick', actionId);\n    },\n    onReset: () => {\n        props.unsetActionId('onClick');\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nexport default compose(\n    withAsyncActionStateHandler(),\n    withRedux,\n)(ClickLoadingSuccess);\n","import cx from './index.m.scss';\n\nexport default ({loading, error, clicked, onClick, onReset}) => (\n    <button\n        type=\"button\"\n        onClick={clicked ? onReset : onClick}\n        disabled={loading === true}\n        className={cx(\n            'btn',\n            {\n                'btn-primary': loading === true || !clicked,\n                'btn-success': clicked && loading === undefined,\n            }\n        )}\n    >\n        {\n            loading === true && (\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" />\n            )\n        }\n        {!clicked && 'Click to be Loading, then to be Success'}\n        {loading === true && ' Loading...'}\n        {clicked && !error && !loading && 'Success! Click again to reset'}\n    </button>\n);\n","import {connect} from 'react-redux';\nimport {createAction} from 'redux-actions';\nimport {get} from 'lodash/fp';\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction, createSelectActions, withAsyncActionStateHandler} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport * as ActionTypes from '../../actions/types';\nimport ClickLoadingError from '../../components/SimpleButtons/ClickLoadingError';\n\nexport const selectActions = () => createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nconst makeMapStateToProps = () => createSelector(\n    selectActions(),\n    (state, props) => props.actionIds,\n    (actions, actionIds) => ({\n        loading: get(['onClick', 'isLoading'], actions),\n        error: get(['onClick', 'error'], actions),\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => {\n        const actionId = idOfAction(dispatch(\n            createAsyncAction(ActionTypes.ASYNC_NOOP)({to: 'fail'})\n        ));\n        props.setActionId('onClick', actionId);\n    },\n    onReset: () => {\n        props.unsetActionId('onClick');\n        dispatch(createAction(ActionTypes.CLEANUP)(props.actionIds.onClick));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nexport default compose(\n    withAsyncActionStateHandler(),\n    withRedux,\n)(ClickLoadingError);\n","import cx from './index.m.scss';\n\nexport default ({loading, error, onClick, onReset}) => (\n    <button\n        type=\"button\"\n        onClick={error ? onReset : onClick}\n        disabled={loading === true}\n        className={cx(\n            'btn',\n            {\n                'btn-primary': loading !== false,\n                'btn-danger': error,\n            }\n        )}\n    >\n        {\n            loading === true && (\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" />\n            )\n        }\n        {loading === undefined && !error && 'Click to be Loading, then to be Error'}\n        {loading === true && ' Loading...'}\n        {error && 'Error! Click again to reset'}\n    </button>\n);\n","import cx from './index.m.scss';\n\nexport default ({id, loading, onClick}) => (\n    <button\n        type=\"button\"\n        onClick={onClick}\n        disabled={loading === true}\n        className={cx('btn', 'btn-primary')}\n    >\n        {`[ ${id} ] `}\n        {loading && (\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" />\n        )}\n        {loading ? ' Loading...' : 'Click to Loading'}\n    </button>\n);\n","import {connect} from 'react-redux';\nimport {get} from 'lodash/fp';\nimport {compose} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction, createSelectActions, withAsyncActionStateHandler} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport * as ActionTypes from '../../actions/types';\nimport ClickLoading from '../../components/SimpleButtons/ClickLoading';\n\nexport const selectActions = () => createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nconst makeMapStateToProps = () => createSelector(\n    selectActions(),\n    (state, props) => props.actionIds,\n    (actions, actionIds) => ({\n        id: 1,\n        loading: get(['onClick', 'isLoading'], actions),\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => {\n        const action = dispatch(createAsyncAction(ActionTypes.ASYNC_NOOP)({to: 'success', foo: 'foo'}));\n        props.setActionId('onClick', idOfAction(action));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nexport default compose(\n    withAsyncActionStateHandler(),\n    withRedux,\n)(ClickLoading);\n","import {connect} from 'react-redux';\nimport {get} from 'lodash/fp';\nimport {compose} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction, createSelectActions, withAsyncActionStateHandler} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport * as ActionTypes from '../../actions/types';\nimport ClickLoading from '../../components/SimpleButtons/ClickLoading';\n\nexport const selectActions = () => createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nconst makeMapStateToProps = () => createSelector(\n    selectActions(),\n    (state, props) => props.actionIds,\n    (actions, actionIds) => ({\n        id: 2,\n        loading: get(['onClick', 'isLoading'], actions),\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => {\n        const action = dispatch(createAsyncAction(ActionTypes.ASYNC_NOOP)({to: 'success', foo: 'foo'}));\n        props.setActionId('onClick', idOfAction(action));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nexport default compose(\n    withAsyncActionStateHandler(),\n    withRedux,\n)(ClickLoading);\n","import {connect} from 'react-redux';\nimport {get} from 'lodash/fp';\nimport {compose} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncActionUnique, idOfAction, createSelectActions, withAsyncActionStateHandler} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport * as ActionTypes from '../../actions/types';\nimport ClickLoading from '../../components/SimpleButtons/ClickLoading';\n\nexport const selectActions = () => createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nconst makeMapStateToProps = () => createSelector(\n    selectActions(),\n    (state, props) => props.actionIds,\n    (actions, actionIds) => ({\n        id: 3,\n        loading: get(['onClick', 'isLoading'], actions),\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => {\n        const action = dispatch(createAsyncActionUnique(ActionTypes.ASYNC_NOOP)({to: 'success', foo: 'foo'}));\n        props.setActionId('onClick', idOfAction(action));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nexport default compose(\n    withAsyncActionStateHandler(),\n    withRedux,\n)(ClickLoading);\n","import {hot} from 'react-hot-loader/root';\nimport ClickLoadingSuccess from '../../connects/SimpleButtons/ClickLoadingSuccess';\nimport ClickLoadingError from '../../connects/SimpleButtons/ClickLoadingError';\nimport ClickLoading1 from '../../connects/SimpleButtons/ClickLoading1';\nimport ClickLoading2 from '../../connects/SimpleButtons/ClickLoading2';\nimport ClickLoading3 from '../../connects/SimpleButtons/ClickLoading3';\n\nexport default hot(()=> (\n    <>\n        <div className=\"row m-3\">\n            <ClickLoadingSuccess />\n        </div>\n        <div className=\"row m-3\">\n            <ClickLoadingError />\n        </div>\n        <div className=\"row m-3\">\n            [1] and [2] below dispatch same action. (types and payloads are the same)\n        </div>\n        <div className=\"row m-3\">\n            So they will share the same loading state.\n        </div>\n        <div className=\"row m-3\">\n            But [3] will not share the same loading state, even if its type and payload are the same too.\n        </div>\n        <div className=\"row m-3\">\n            Because we make the action unique:\n            <b>Action Type + Action Payload + Action Time = Action Instance.</b>\n        </div>\n        <div className=\"row m-3\">\n            <ClickLoading1 />\n        </div>\n        <div className=\"row m-3\">\n            <ClickLoading2 />\n        </div>\n        <div className=\"row m-3\">\n            <ClickLoading3 />\n        </div>\n    </>\n));\n"],"sourceRoot":""}