{"version":3,"sources":["webpack:///./demo/src/components/PostList/index.m.scss?dbc4","components/PostList/index.m.scss","index.css","../../src/error.js","../../src/action.js","../../src/phase.js","api/errors.js","actions/types.js","utils/index.js","api/index.js","config.js","sagas/index.js","../../src/saga.js","../../src/reducer.js","reducers/ui/index.js","reducers/ui/posts.js","reducers/index.js","../../src/operation.js","store/index.js","store/configureStore.js","components/PostList/Pager.jsx","components/PostList/AuthorModal.jsx","components/PostList/DataRow.jsx","components/PostList/DataRows.jsx","../../src/hoc.jsx","connects/PostList/actions.js","connects/PostList/selectors.js","../../src/selector.js","connects/PostList/MaybeDataRows.js","components/PostList/Placeholder.jsx","components/PostList/Loading.jsx","components/PostList/NoData.jsx","connects/PostList/MaybeBuffer.js","components/PostList/LoadingBuffer.jsx","components/PostList/Empty.jsx","components/PostList/Buffer.jsx","connects/PostList/index.js","components/PostList/index.jsx","components/App/index.jsx","index.jsx"],"names":["classNames","__webpack_require__","locals","css","bind","style","module","exports","no-border","pager","selected","operation","error","star","pagination","FluxStandardActionError","_extendableBuiltin2","_this","message","arguments","length","undefined","_classCallCheck","this","_getPrototypeOf","call","name","Error","captureStackTrace","_assertThisInitialized","constructor","stack","_inherits","_extendableBuiltin","UUID_NAMESPACE","uuidv5","document","domain","idOfAction","action","isFSA","type","payload","meta","id","stringify","isFinished","phase","succeedWith","_objectSpread","progress","utime","Date","toISOString","failWith","makeActionAsync","trackableAction","pid","ctime","makeTrackable","createAsyncAction","createAction","MyError","errors_classCallCheck","errors_getPrototypeOf","errors_assertThisInitialized","errors_inherits","errors_extendableBuiltin","ASYNC_GET_MANY_POST","ASYNC_PATCH_ONE_POST","ASYNC_GET_ONE_USER_BY_POST_ID","delay","seconds","Promise","resolve","window","setTimeout","recur","_len","args","Array","_key","repeat","$n","f","x","acc","apply","_toConsumableArray","loop","n","post","schema","Entity","user","getManyPost","_ref","page","Math","ceil","random","then","mockedPosts","define","author","commenters","mockedCommenters","push","fullName","Random","concat","title","uniq","email","request","response","api_objectSpread","normalize","patchOnePost","_ref2","_extends","mock","Number","JSON","status","statusText","body","data","omit","params","getOneUser","_ref3","createDefaultWorker","_slicedToArray","ErrorType","CleanupActionType","method","regeneratorRuntime","mark","_callee","state","json","wrap","_context","prev","next","abrupt","select","sent","put","t0","stop","makeCreateDefaultWorker","sagas_callee","all","takeEvery","ActionTypes","Api","postId","entities","posts","_marked","DEFAULT_ASYNC_ACTION_TYPE_REGEX","combineReducers","_action$payload","result","pathOfBuffer","pathOfIds","get","set","compose","moveBufferToIds","entityActionMap","EntityActionMap","_posts","reducers_defineProperty","k","l","r","difference","users","_users","actions","reducer_slicedToArray","AsyncActionTypeRegex","isArray","test","lensProp","mergeDeepRight","parse","Errio","createActionsReducer","session","combinedReducers","entityTypes","flatten","map","keys","queuedCombinedReducers","reduce","newCombined","entityType","queue","combined","cur","final","reducer","v","mergeQueuedReducers","groupByComposeByEntityType","reducers","operations","_ref4","merger","getNewPayload","mergeDeepWithKey","createEntityTypeReducer","ui","configureStore","preloadedState","initialState","storeName","LS_KEY","localStorage","getItem","e","console","log","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","rootSaga","subscribe","setItem","getState","PageNumber","onClick","react_default","a","createElement","className","cx","Pager","onPage","Pager_PageNumber","ReactModal","setAppElement","AuthorModal","isLoading","onCloseAuthorModal","react_modal_lib_default","isOpen","contentLabel","content","width","height","fontSize","textAlign","margin","paddingTop","role","DataRow","onStar","onStarTransient","onClearStarLoading","onViewAuthor","isChecked","onToggleCheck","scope","checked","onChange","withStates","withStateHandlers","actionIds","setActionId","props","key","actionId","lens","lensPath","hoc_toConsumableArray","unsetActionId","_createContext","createContext","Provider","Consumer","withAsyncActionContextProvider","ComponentIn","ComponentOut","rest","_objectWithoutProperties","value","displayName","wrapDisplayName","withAsyncActionContextConsumer","context","hoc_extends","createAsyncActionContext","mapAsyncActionProps","onTrackAsyncAction","onUntrackAsyncAction","selectActions","selectActionIds","selectPostIds","selectUsers","selectPosts","createSelector","ids","selectors_objectSpread","String","selectPostsBuffer","buffer","filter","includes","reduceRecursively","selectModalAuthor","modalPostAuthor","selectTransientOfOnPage","selectTransientOfOnStar","withRedux","connect","selectProps","items","onPageTransient","dispatch","maybePlaceholder","branch","renderComponent","Fragment","colSpan","maybeLoading","rows","loading","maybeNoData","maybeNotDataRows","withProps","transients","item","DataRows_extends","onAccept","maybeBufferLoading","maybeNothing","maybeNotBuffer","modalAuthorInfo","setPage","setModalPostAuthor","onBatchStar","forEach","setSelected","PostList_toConsumableArray","withLifecycle","lifecycle","componentDidMount","withLiftedStates","withState","marginTop","MaybeDataRows","MaybeBuffer","PostList_extends","App","es","href","viewBox","version","aria-hidden","fillRule","d","connects_PostList","root","appendChild","render","components_App"],"mappings":"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","file":"static/js/main.8aafdca2.chunk.js","sourcesContent":["\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-2!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/lib/loader.js??ref--5-oneOf-4-4!./index.m.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) css[style] = locals[style];\n        module.exports = css;\n    ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-border\":\"demo-src-components-PostList-index-m__no-border--21upB\",\"pager\":\"demo-src-components-PostList-index-m__pager--1yNJo\",\"selected\":\"demo-src-components-PostList-index-m__selected--3DKWA\",\"operation\":\"demo-src-components-PostList-index-m__operation--2xptW\",\"error\":\"demo-src-components-PostList-index-m__error--2oJIx\",\"star\":\"demo-src-components-PostList-index-m__star--yJHpu\",\"pagination\":\"demo-src-components-PostList-index-m__pagination--c4Li-\"};","\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n        var css = classNames.bind(locals);\n        for (var style in locals) css[style] = locals[style];\n        module.exports = css;\n    ","export class FluxStandardActionError extends Error {\n    constructor(message = 'Invalid FSA. See https://github.com/acdlite/flux-standard-action') {\n        super(message);\n        this.name = 'FluxStandardActionError';\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","import stringify from 'json-stable-stringify';\nimport {createAction} from 'redux-actions';\nimport {isFSA} from 'flux-standard-action';\nimport uuidv5 from 'uuid/v5';\nimport {FluxStandardActionError} from './error';\nimport {PHASE_GHOST, PHASE_STARTED, PHASE_RUNNING, PHASE_FINISH} from './phase';\n\nconst UUID_NULL = '00000000-0000-0000-0000-000000000000';\n\nconst UUID_NAMESPACE = uuidv5(document.domain, UUID_NULL);\n\nexport const idOfAction = action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    const {type, payload, meta} = action;\n\n    if (meta && meta.id) {\n        return meta.id;\n    }\n\n    return uuidv5(stringify([type, payload]), UUID_NAMESPACE);\n};\n\nexport const pidOfAction = action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    const {meta} = action;\n\n    return meta ? meta.pid : undefined;\n};\n\nexport const makeTrackable = action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    return {\n        ...action,\n        meta: {\n            id: idOfAction(action),\n            pid: undefined,\n            ctime: (new Date()).toISOString(),\n        },\n    };\n};\n\nexport const trackFor = parent => child => {\n    if (!isFSA(child) || !isFSA(parent)) {\n        throw new FluxStandardActionError();\n    }\n\n    return {\n        ...child,\n        meta: {\n            id: idOfAction(child),\n            pid: idOfAction(parent),\n            ctime: (new Date()).toISOString(),\n        },\n    };\n};\n\nexport const isStarted = action => action.meta.phase === PHASE_STARTED;\nexport const isRunning = action => action.meta.phase === PHASE_RUNNING;\nexport const isFinished = action => action.meta.phase === PHASE_FINISH;\n\nexport const continueWith = (payload, progress = 0) => action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    return {\n        ...action,\n        payload,\n        meta: {\n            ...action.meta,\n            phase: PHASE_RUNNING,\n            progress,\n            utime: (new Date()).toISOString(),\n        },\n    };\n};\n\nexport const succeedWith = payload => action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    return {\n        ...action,\n        payload,\n        meta: {\n            ...action.meta,\n            phase: PHASE_FINISH,\n            progress: 100,\n            utime: (new Date()).toISOString(),\n        },\n    };\n};\n\nexport const failWith = error => action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    return {\n        ...action,\n        payload: error,\n        error: true,\n        meta: {\n            ...action.meta,\n            phase: PHASE_FINISH,\n            progress: 100,\n            utime: (new Date()).toISOString(),\n        },\n    };\n};\n\nexport const isChildOf = parent => child => {\n    if (!isFSA(child) || !isFSA(parent)) {\n        throw new FluxStandardActionError();\n    }\n\n    return (parent.meta.id === child.meta.pid);\n};\n\nexport const makeChildOf = parent => child => {\n    if (!isFSA(child) || !isFSA(parent)) {\n        throw new FluxStandardActionError();\n    }\n\n    const childAction = trackFor(parent)(child);\n    return {\n        ...childAction,\n        meta: {\n            ...childAction.meta,\n            phase: PHASE_STARTED,\n            progress: 0,\n        },\n    };\n};\n\nexport const makeActionAsync = action => {\n    if (!isFSA(action)) {\n        throw new FluxStandardActionError();\n    }\n\n    const trackableAction = makeTrackable(action);\n\n    return {\n        ...trackableAction,\n        meta: {\n            ...trackableAction.meta,\n            phase: PHASE_STARTED,\n            progress: 0,\n        },\n    };\n};\n\nexport const createAsyncAction = type => payload => makeActionAsync(createAction(type)(payload));\n","export const PHASE_GHOST = 'ghost'; // for optimistic\nexport const PHASE_STARTED = 'started';\nexport const PHASE_RUNNING = 'running';\nexport const PHASE_FINISH = 'finish';\n","export class MyError extends Error {\n    constructor(message = 'MyError') {\n        super(message);\n        this.name = 'MyError';\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n","export const CLEANUP = 'CLEANUP';\nexport const ASYNC_GET_MANY_POST = 'ASYNC_GET_MANY_POST';\nexport const ASYNC_DELETE_ONE_POST = 'ASYNC_DELETE_ONE_POST';\nexport const ASYNC_PATCH_ONE_POST = 'ASYNC_PATCH_ONE_POST';\nexport const ACCEPT_UPDATE_POST_LIST = 'ACCEPT_UPDATE_POST_LIST';\nexport const ASYNC_GET_ONE_USER_BY_POST_ID = 'ASYNC_GET_ONE_USER_BY_POST_ID';\n","export const delay = seconds =>\n    new Promise(resolve => window.setTimeout(resolve, seconds * 1000));\n\n// @see https://stackoverflow.com/questions/30452263/is-there-a-mechanism-to-loop-x-times-in-es6-ecmascript-6-without-mutable-varia\nconst recur = (...args) => ({ type: recur, args });\n\nconst loop = f => {\n    let acc = f();\n    while (acc.type === recur) {\n        acc = f(...acc.args);\n    }\n    return acc;\n};\n\nexport const repeat = $n => f => x =>\n    loop((n = $n, acc = x) => (n === 0 ? acc : recur(n - 1, f(acc))));\n\nexport const offsetToPage = (offset, limit = 10) => offset / limit + 1;\n\nexport const pageToOffset = (page, limit = 10) =>\n    page > 1 ? (page - 1) * limit : 0;\n","import {normalize, schema} from 'normalizr';\nimport {Random} from 'mockjs';\nimport {omit, uniq} from 'lodash/fp';\nimport {delay, repeat} from '../utils';\nimport {PAGE_SIZE_OF_POST_LIST} from '../config';\nimport {MyError} from './errors';\n\nconst post = new schema.Entity('posts');\nconst user = new schema.Entity('users');\n\nexport const getManyPost = ({page}) => delay(Math.ceil((Math.random() * 2)))\n    .then(() => {\n        const mockedPosts = [];\n\n        const createPosts = n => {\n            const mockedCommenters = [];\n\n            const createCommenters = n => {\n                mockedCommenters.push({\n                    id: Math.ceil((Math.random() * 20)),\n                    fullName: Random.name(),\n                    utime: (new Date()).toISOString(),\n                });\n                return n + 1;\n            };\n\n            repeat(5)(createCommenters)(1);\n\n            mockedPosts.push({\n                id: `${n}${Math.ceil((Math.random() * 2))}`,\n                title: `${Random.title()}${page}`,\n                author: {\n                    id: Math.ceil((Math.random() * 20)),\n                    fullName: Random.name(),\n                    utime: (new Date()).toISOString(),\n                },\n                commenters: uniq(mockedCommenters),\n                email: Random.email(),\n            });\n            return n + 1;\n        };\n\n        post.define({\n            author: user,\n            commenters: [user],\n        });\n\n        repeat(PAGE_SIZE_OF_POST_LIST)(createPosts)(page * PAGE_SIZE_OF_POST_LIST);\n\n        return {\n            request: {\n                meta: {page},\n            },\n            response: {\n                ...normalize(mockedPosts, [post]),\n            }\n        };\n    });\n\n\nexport const patchOnePost = ({...args}) => delay(Math.ceil((Math.random() * 4)))\n    .then(() => {\n        const mock = {\n            id: args.id,\n            star: true,\n            utime: (new Date()).toISOString(),\n        };\n\n        if (!(Number(args.id) % 3)) {\n            throw new MyError(JSON.stringify({\n                status: 400,\n                statusText: 'Bad Request',\n                body: '收藏失败',\n            }));\n        }\n\n        return {\n            request: {\n                data: {...omit(['id'], {...args})},\n                params: {id: args.id},\n            },\n            response: {\n                ...normalize(mock, post),\n            }\n        };\n    });\n\nexport const getOneUser = ({id}) => delay(Math.ceil((Math.random() * 3)))\n    .then(() => {\n        const mock = {\n            id,\n            fullName: Random.name(),\n            utime: (new Date()).toISOString(),\n        };\n\n        return {\n            request: {\n                params: {id},\n            },\n            response: {\n                ...normalize(mock, user),\n            }\n        };\n    });\n","export const PAGE_SIZE_OF_POST_LIST = 10;\nexport const LOCAL_STORAGE_REDUX_STORE_KEY = 'REDUX-SAGA-MATE-DEMO-REDUX-STORE';\n","import {all, takeEvery} from 'redux-saga/effects';\nimport {makeCreateDefaultWorker} from 'redux-saga-mate/src/saga';\nimport {MyError} from '../api/errors';\nimport * as ActionTypes from '../actions/types';\nimport * as Api from '../api';\n\nconst createDefaultWorker = makeCreateDefaultWorker([MyError, ActionTypes.CLEANUP]);\n\n// Notice!\n// If you need more complicated logic controls then the default worker saga,\n// you need to implement your own worker sagas.\nexport default function* () {\n    yield all([\n        takeEvery(ActionTypes.ASYNC_GET_MANY_POST, createDefaultWorker(Api.getManyPost)),\n        takeEvery(ActionTypes.ASYNC_PATCH_ONE_POST, createDefaultWorker(Api.patchOnePost)),\n        takeEvery(ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID, createDefaultWorker(\n            Api.getOneUser,\n            (state, action) => {\n                const {postId} = action.payload;\n                const {author} = state.entities.posts[postId];\n                return {id: author};\n            }\n        )),\n    ]);\n}\n","import {createAction} from 'redux-actions';\nimport {call, put, select} from 'redux-saga/effects';\nimport {idOfAction, isFinished, failWith, succeedWith} from './action';\n\n// reducer和saga的执行顺序见下方issue\n// @see: https://github.com/redux-saga/redux-saga/issues/148\nexport const makeCreateDefaultWorker = ([ErrorType, CleanupActionType]) => (method, payload) => function* (action) {\n    try {\n        if (isFinished(action)) {\n            return;\n        }\n\n        const state = yield select();\n\n        const json = yield call(method, (payload ? payload(state, action) : action.payload));\n\n        yield put(succeedWith(json)(action));\n        yield put(createAction(CleanupActionType)(idOfAction(action)));\n    } catch (error) {\n        if (error instanceof ErrorType) {\n            yield put(failWith(error)(action));\n            return;\n        }\n        throw error;\n    }\n};\n","import Errio from 'errio';\nimport compose from 'ramda/src/compose';\nimport omit from 'ramda/src/omit';\nimport mergeDeepWithKey from 'ramda/src/mergeDeepWithKey';\nimport mergeDeepRight from 'ramda/src/mergeDeepRight';\nimport mergeWith from 'ramda/src/mergeWith';\nimport keys from 'ramda/src/keys';\nimport reduce from 'ramda/src/reduce';\nimport uniq from 'ramda/src/uniq';\nimport flatten from 'ramda/src/flatten';\nimport map from 'ramda/src/map';\nimport set from 'ramda/src/set';\nimport lensProp from 'ramda/src/lensProp';\nimport {isFinished} from './action';\nimport {UPDATE, DELETE} from './operation';\n\nconst DEFAULT_CLEANUP_ACTION_TYPE = 'CLEANUP_TRACKABLE_ACTION';\nconst DEFAULT_ASYNC_ACTION_TYPE_REGEX = /^(REST|API|LOAD|ASYNC|FETCH|AJAX)_[0-9A-Z_]+$/;\n\nexport const createActionsReducer = ([\n    CleanupActionType,\n    AsyncActionTypeRegex,\n] = [\n    DEFAULT_CLEANUP_ACTION_TYPE,\n    DEFAULT_ASYNC_ACTION_TYPE_REGEX,\n]) => (state = {}, action) => {\n    if (action.type === CleanupActionType) {\n        return Array.isArray(action.payload) ? omit(action.payload, state) : omit([action.payload], state);\n    }\n\n    if (AsyncActionTypeRegex.test(action.type)) {\n        return set(\n            lensProp(action.meta.id),\n            mergeDeepRight(action, {\n                payload: (action.error ? JSON.parse(Errio.stringify(action.payload)) : action.payload),\n            }),\n            state,\n        );\n    }\n\n    return state;\n};\n\nexport const createEntityTypeReducer = (entityType, operations) => (state = {}, action) => {\n    if (operations[action.type] && isFinished(action) && !action.error) {\n        const [operation, merger] = (\n            Array.isArray(operations[action.type]) ? operations[action.type] : [operations[action.type]]\n        );\n        if (operation === UPDATE) {\n            const getNewPayload = () => {\n                if (action.payload.response) {\n                    return action.payload.response.entities[entityType];\n                }\n                return action.payload.entities[entityType];\n            };\n            if (merger) {\n                return mergeDeepWithKey(merger, state, getNewPayload());\n            }\n            return mergeDeepRight(state, getNewPayload());\n        }\n        if (operation === DELETE) {\n            return omit([action.payload.request.params.id])(state);\n        }\n    }\n    return state;\n};\n\nexport const createEntitiesReducer = entityActionMap => compose(\n    reduce((reducers, entityType) => set(\n        lensProp(entityType),\n        createEntityTypeReducer(entityType, entityActionMap[entityType]),\n        reducers,\n    ), {}),\n    keys,\n)(entityActionMap);\n\n/**\n * [{key1: fn1}, {key1: fn11}, {key2: fn2}, {key2: fn22, key3: fn3}]\n * =>\n * {key1: [fn1, fn11], key2: [fn2, fn22], key3: [fn3]}\n */\nexport const groupByComposeByEntityType = (...combinedReducers) => {\n    const entityTypes = compose(uniq, flatten, map(keys))(combinedReducers);\n\n    const queuedCombinedReducers = reduce(\n        (newCombined, entityType) => set(\n            lensProp(entityType),\n            reduce(\n                (queue, combined) => (\n                    combined[entityType] ? queue.concat([combined[entityType]]) : queue\n                ),\n                [],\n                combinedReducers,\n            ),\n            newCombined,\n        ),\n        {},\n        entityTypes,\n    );\n\n    const mergeQueuedReducers = compose(\n        reduce((acc, cur) => set(\n            lensProp(cur),\n            reduce(\n                (final, reducer) => (state, action) => reducer(final(state, action), action),\n                v => v,\n                queuedCombinedReducers[cur],\n            ),\n            acc,\n        ), {}),\n        keys,\n    );\n\n    return mergeQueuedReducers(queuedCombinedReducers);\n};\n","import {combineReducers} from 'redux';\nimport posts from './posts';\n\nexport default combineReducers({\n    posts,\n});\n","import {isFinished} from 'redux-saga-mate/src/action';\nimport {compose, get, set} from 'lodash/fp';\nimport * as ActionTypes from '../../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case ActionTypes.ASYNC_GET_MANY_POST: {\n            if (isFinished(action) && !action.error) {\n                const {payload: {request: {meta: {page}}, response: {result}}} = action;\n                const pathOfBuffer = [page, 'buffer'];\n                const pathOfIds = [page, 'ids'];\n                if (page > 3 && (get(pathOfIds, state) || []).length > 0) {\n                    return set(pathOfBuffer, result, state);\n                }\n                return set(pathOfIds, result, state);\n            }\n            return state;\n        }\n        case ActionTypes.ACCEPT_UPDATE_POST_LIST: {\n            const {payload: {page}} = action;\n            const pathOfBuffer = [page, 'buffer'];\n            const pathOfIds = [page, 'ids'];\n            const moveBufferToIds = compose(\n                set(pathOfBuffer, undefined),\n                set(pathOfIds, get(pathOfBuffer, state)),\n            );\n            return moveBufferToIds(state);\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {combineReducers} from 'redux';\nimport {concat, difference} from 'lodash/fp';\nimport {createActionsReducer, createEntitiesReducer, groupByComposeByEntityType} from 'redux-saga-mate/src/reducer';\nimport {UPDATE, DELETE} from 'redux-saga-mate/src/operation';\nimport * as ActionTypes from '../actions/types';\nimport ui from './ui';\n\nconst EntityActionMap = {\n    posts: {\n        [ActionTypes.ASYNC_GET_MANY_POST]: [\n            UPDATE,\n            (k, l, r) => (k === 'commenters' ? concat(l, difference(r, l)) : r),\n        ],\n        [ActionTypes.ASYNC_DELETE_ONE_POST]: DELETE,\n        [ActionTypes.ASYNC_PATCH_ONE_POST]: UPDATE,\n    },\n    users: {\n        [ActionTypes.ASYNC_GET_MANY_POST]: UPDATE,\n        [ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID]: UPDATE,\n    },\n};\n\nexport default combineReducers({\n    actions: createActionsReducer([ActionTypes.CLEANUP, /^ASYNC_/]),\n    session: (state = {}, action) => state,\n    entities: combineReducers(\n        groupByComposeByEntityType(\n            createEntitiesReducer(EntityActionMap),\n            {},\n        ),\n    ),\n    ui,\n});\n","export const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\n","import configureStore from './configureStore';\nimport {LOCAL_STORAGE_REDUX_STORE_KEY} from '../config';\n\nexport default configureStore(undefined, 'REDUX-SAGE-MATE-DEMO', LOCAL_STORAGE_REDUX_STORE_KEY);\n","/* global process */\n/* global module */\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport rootReducer from '../reducers';\n\nexport default (initialState = undefined, storeName = undefined, LS_KEY = 'REDUX-STORE') => {\n    let preloadedState;\n\n    try {\n        preloadedState = initialState\n            || JSON.parse(window.localStorage.getItem(LS_KEY))\n            || undefined;\n    } catch (e) {\n        console.log('The JSON data in Local Storage seems broken!');\n        preloadedState = undefined;\n    }\n\n    const composeEnhancers = composeWithDevTools({name: storeName});\n\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        preloadedState,\n        composeEnhancers(applyMiddleware(\n            sagaMiddleware\n        )),\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    store.subscribe(() => window.localStorage.setItem(LS_KEY, JSON.stringify(store.getState())));\n\n    if (module.hot) {\n        module.hot.accept('../reducers', () => store.replaceReducer(rootReducer));\n    }\n\n    return store;\n};\n","import cx from './index.m.scss';\n\nconst PageNumber = ({page, onClick, selected}) => {\n    const handleClick = () => {\n        onClick(page);\n    };\n\n    return (\n        <button\n            type=\"button\"\n            onClick={handleClick}\n            className={cx({selected}, 'pager')}\n        >\n            {page}\n        </button>\n    );\n};\n\nexport default ({page, onPage}) => (\n    <div className={cx('pagination')}>\n        <PageNumber page={1} onClick={onPage} selected={page === 1} />\n        <PageNumber page={2} onClick={onPage} selected={page === 2} />\n        <PageNumber page={3} onClick={onPage} selected={page === 3} />\n        <PageNumber page={4} onClick={onPage} selected={page === 4} />\n        <PageNumber page={5} onClick={onPage} selected={page === 5} />\n    </div>\n);\n","import ReactModal from 'react-modal';\nimport cx from './index.m.scss';\n\nReactModal.setAppElement(document.body);\n\nexport default ({isLoading, fullName, onCloseAuthorModal}) => (\n    <ReactModal\n        isOpen={true}\n        contentLabel=\"Author Infomation\"\n        style={{\n            content: {\n                width: '400px',\n                height: '100px',\n                fontSize: '24px',\n                textAlign: 'center',\n                margin: '30px auto',\n                paddingTop: '30px',\n            }\n        }}\n    >\n        {\n            isLoading && (\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            )\n        }\n        {fullName}\n        {' '}\n        <button\n            type=\"button\"\n            onClick={onCloseAuthorModal}\n            className={cx('btn btn-primary btn-sm')}\n        >\n            Close\n        </button>\n    </ReactModal>\n);\n","import cx from './index.m.scss';\n\nexport default ({\n    id,\n    title,\n    author,\n    commenters,\n    email,\n    star,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    isChecked,\n    onToggleCheck,\n}) => {\n    const handleStar = () => {\n        onStar(id);\n    };\n\n    const handleConfirmError = () => {\n        onClearStarLoading(id);\n    };\n\n    const handleViewAuthor = () => {\n        onViewAuthor(id);\n    }\n\n    const handleToggleCheck = () => {\n        onToggleCheck(id);\n    }\n\n    return (\n        <tr>\n            <th scope=\"row\">\n                <input type=\"checkbox\" checked={isChecked} onChange={handleToggleCheck} />\n                {' '}\n                {id}\n            </th>\n            <td>{title}</td>\n            <td className={cx('operation')}>\n                {author}\n                {' '}\n                <button\n                    type=\"button\"\n                    onClick={handleViewAuthor}\n                    className={cx('oi oi-eye', 'no-border')}\n                />\n                {' '}\n                {commenters.length}\n            </td>\n            <td>{email}</td>\n            <td className={cx('operation')}>\n                {' '}\n                {\n                    onStarTransient && onStarTransient.isLoading && (\n                        <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    )\n                }\n                {\n                    (!onStarTransient || !onStarTransient.isLoading) && (\n                        <button\n                            type=\"button\"\n                            onClick={handleStar}\n                            className={cx('oi oi-star', 'no-border', {star})}\n                        />\n                    )\n                }\n                {' '}\n                {\n                    (onStarTransient && !onStarTransient.isLoading && onStarTransient.error) && (\n                        <button\n                            type=\"button\"\n                            className={cx('error', 'no-border')}\n                            onClick={handleConfirmError}\n                        >\n                            Failed! Click to Dimiss!\n                        </button>\n                    )\n                }\n            </td>\n        </tr>\n    );\n};\n","import {get} from 'lodash/fp';\nimport DataRow from './DataRow';\n\nexport default ({\n    page,\n    items,\n    selected,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    onToggleCheck,\n    transients,\n}) =>items.map(item => (\n    <DataRow\n        key={item.id}\n        {...item}\n        isChecked={(selected || []).includes(item.id)}\n        onStar={onStar}\n        onStarTransient={get(item.id, onStarTransient)}\n        onViewAuthor={onViewAuthor}\n        onToggleCheck={onToggleCheck}\n        onClearStarLoading={onClearStarLoading}\n    />\n));\n","import {createContext} from 'react';\nimport {compose, withProps, withStateHandlers, renderComponent, wrapDisplayName} from 'recompose';\nimport identity from 'ramda/src/identity';\nimport set from 'ramda/src/set';\nimport lensPath from 'ramda/src/lensPath';\n\nconst withStates = withStateHandlers(\n    () => ({actionIds: {}}),\n    {\n        setActionId: (state, props) => (key, actionId) => {\n            const lens = Array.isArray(key) ? lensPath(['actionIds', ...key]) : lensPath(['actionIds', key]);\n            return set(lens, actionId, state);\n        },\n        unsetActionId: (state, props) => key => {\n            const lens = Array.isArray(key) ? lensPath(['actionIds', ...key]) : lensPath(['actionIds', key]);\n            return set(lens, undefined, state);\n        },\n    }\n);\n\nexport const withAsyncActionStateHandler = (mapToProps = identity) => compose(\n    withStates,\n    withProps(mapToProps),\n);\n\nexport const createAsyncActionContext = () => {\n    const {Provider, Consumer} = createContext(undefined);\n\n    const withAsyncActionContextProvider = ComponentIn => {\n        const ComponentOut = ({actionIds, setActionId, unsetActionId, ...rest}) => (\n            <Provider value={{actionIds, setActionId, unsetActionId}}>\n                <ComponentIn {...rest} />\n            </Provider>\n        );\n\n        ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withAsyncActionContextProvider');\n\n        return withStates(ComponentOut);\n    };\n\n    const withAsyncActionContextConsumer = ComponentIn => {\n        const ComponentOut = props => (\n            <Consumer>\n                {\n                    context => (\n                        <ComponentIn {...props} {...context} />\n                    )\n                }\n            </Consumer>\n        );\n\n        ComponentOut.displayName = wrapDisplayName(ComponentIn, 'withAsyncActionContextConsumer');\n\n        return ComponentOut;\n    };\n\n    return {\n        withAsyncActionContextProvider,\n        withAsyncActionContextConsumer,\n    };\n};\n","import {createAsyncActionContext} from 'redux-saga-mate/src/hoc';\n\nexport const {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n} = createAsyncActionContext();\n\nexport const mapAsyncActionProps = ({actionIds, setActionId, unsetActionId}) => ({\n    actionIds,\n    onTrackAsyncAction: setActionId,\n    onUntrackAsyncAction: unsetActionId,\n});\n","import {createSelector} from 'reselect';\nimport {get} from 'lodash/fp';\nimport {createSelectActions} from 'redux-saga-mate/src/selector';\n\nexport const selectPostIds = (state, props) => get(['ui', 'posts', props.page, 'ids'], state);\nexport const selectBufferPostIds = (state, props) => get(['ui', 'posts', props.page, 'buffer'], state);\nexport const selectModalPost = (state, props) => get([props.modalPostAuthor], state.entities.posts);\n\nexport const selectUsers = (state, props) => state.entities.users;\n\nexport const selectPosts = createSelector(\n    (state, props) => state.entities.posts,\n    selectPostIds,\n    selectUsers,\n    (posts, ids, users) => {\n        if (ids) {\n            return ids.map(id => ({\n                ...posts[String(id)],\n                author: users[posts[String(id)].author].fullName,\n            }));\n        }\n        return undefined;\n    },\n);\n\nexport const selectPostsBuffer = createSelector(\n    selectBufferPostIds,\n    selectPostIds,\n    (buffer, ids) => {\n        if (!buffer || !ids) {\n            return [];\n        }\n        return buffer.filter(id => !ids.includes(id));\n    },\n);\n\nexport const selectActions = createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nexport const selectModalAuthor = createSelector(\n    selectModalPost,\n    selectUsers,\n    selectActions,\n    (post, users, actions) => {\n        const {isLoading} = actions.onViewAuthor ? actions.onViewAuthor : {isLoading: undefined};\n\n        if (isLoading) {\n            return {isLoading};\n        }\n\n        return {\n            isLoading,\n            ...post ? get([post.author], users) : {},\n        };\n    },\n);\n\nexport const selectTransientOfOnPage = createSelector(\n    selectActions,\n    (state, props) => props.page,\n    (actions, page) => {\n        if (!actions.onPage || !actions.onPage[page]) {\n            return undefined;\n        }\n        return actions.onPage[page];\n    }\n);\n\nexport const selectTransientOfOnStar = createSelector(\n    selectActions,\n    actions => {\n        if (!actions.onStar || !actions.onStar) {\n            return undefined;\n        }\n        return actions.onStar;\n    }\n);\n","import {createSelector} from 'reselect';\nimport prop from 'ramda/src/prop';\nimport keys from 'ramda/src/keys';\nimport omit from 'ramda/src/omit';\nimport set from 'ramda/src/set';\nimport lensProp from 'ramda/src/lensProp';\nimport {isFinished} from './action';\n\nexport const createSelectActions = (selectActions, selectActionIds) => createSelector(\n    [selectActions, selectActionIds],\n    (actions, actionIds) => {\n        const reduceRecursively = function reduceRecursively(actionIds) {\n            return keys(actionIds).reduce((acc, id) => {\n                if (!actionIds[id]) {\n                    return acc;\n                }\n\n                if (typeof actionIds[id] === 'string') {\n                    if (!actions[actionIds[id]]) {\n                        return acc;\n                    }\n\n                    const action = actions[actionIds[id]];\n\n                    return set(\n                        lensProp(id),\n                        omit(['type', 'meta'], set(lensProp('isLoading'), !isFinished(action), action)),\n                        acc,\n                    );\n                }\n                return set(lensProp(id), reduceRecursively(actionIds[id]), acc);\n            }, {});\n        };\n        return reduceRecursively(actionIds);\n    },\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate/src/action';\nimport Placeholder from '../../components/PostList/Placeholder';\nimport Loading from '../../components/PostList/Loading';\nimport NoData from '../../components/PostList/NoData';\nimport DataRows from '../../components/PostList/DataRows';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage, selectTransientOfOnStar} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    selectTransientOfOnStar,\n    (items, buffer, onPageTransient, onStarTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n        onStarTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onStar: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n        props.onTrackAsyncAction(['onStar', id], actionId);\n    },\n    onViewAuthor: id => {\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_ONE_USER_BY_POST_ID)({\n            postId: id,\n        })));\n        props.onTrackAsyncAction('onViewAuthor', actionId);\n        props.onViewAuthor(id);\n    },\n    onClearStarLoading: id => {\n        props.onUntrackAsyncAction(['onStar', id]);\n        dispatch(createAction(ActionTypes.CLEANUP)(props.actionIds.onStar[id]));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybePlaceholder = branch(\n    ({items, onPageTransient}) => (!items && !onPageTransient),\n    renderComponent(Placeholder),\n);\n\nconst maybeLoading = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && onPageTransient.isLoading),\n    renderComponent(Loading),\n);\n\nconst maybeNoData = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && !onPageTransient.isLoading),\n    renderComponent(NoData),\n);\n\nconst maybeNotDataRows = compose(maybeNoData, maybePlaceholder, maybeLoading);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotDataRows,\n)(DataRows);\n","export default () => (\n    <>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n        <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n    </>\n);\n","import {repeat} from '../../utils';\n\nexport default () => {\n    const rows = [];\n\n    const loading = n => (\n        <tr key={n}>\n            <td colSpan=\"5\" className=\"text-center\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    );\n\n    const makeLoading = n => {\n        rows.push(loading(n));\n        return n + 1;\n    };\n\n    repeat(10)(makeLoading)(1);\n\n    return rows;\n}\n","export default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">没有符合条件的数据!</td></tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport LoadingBuffer from '../../components/PostList/LoadingBuffer';\nimport Buffer from '../../components/PostList/Buffer';\nimport Empty from '../../components/PostList/Empty';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectPosts, selectPostsBuffer, selectTransientOfOnPage} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectTransientOfOnPage,\n    (items, buffer, onPageTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onAccept: () => {\n        dispatch(createAction(ActionTypes.ACCEPT_UPDATE_POST_LIST)({page: props.page}));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybeBufferLoading = branch(\n    ({items, buffer, onPageTransient}) => (\n        items && onPageTransient && onPageTransient.isLoading\n    ),\n    renderComponent(LoadingBuffer),\n);\n\nconst maybeNothing = branch(\n    ({items, buffer, onPageTransient}) => (\n        !items\n            || (items && !buffer.length && !onPageTransient)\n            || (items && onPageTransient && !onPageTransient.isLoading && !buffer.length)\n    ),\n    renderComponent(Empty),\n);\n\nconst maybeNotBuffer = compose(\n    maybeBufferLoading,\n    maybeNothing,\n);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotBuffer\n)(Buffer);\n","export default () => (\n    <tr>\n        <td colSpan=\"5\" className=\"text-center\">\n            <div className=\"text-center\">\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </td>\n    </tr>\n);\n","export default () => (\n    <tr><td colSpan=\"5\" className=\"text-center\">&nbsp;</td></tr>\n);\n","import cx from './index.m.scss';\n\nexport default ({buffer, onAccept}) => (\n    <tr key=\"buffer\">\n        <td colSpan=\"5\" className=\"text-center\">\n            {`${buffer.length} new records, click to`}\n            {' '}\n            <button\n                type=\"button\"\n                onClick={onAccept}\n                className={cx('btn btn-outline-primary btn-sm')}\n            >\n                accpet!\n            </button>\n        </td>\n    </tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate/src/action';\n// import {\n//     withAsyncActionStateHandler,\n//     createAsyncActionContext,\n// } from 'redux-saga-mate/src/hoc';\nimport {delay} from '../../utils';\nimport PostList from '../../components/PostList';\nimport {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    mapAsyncActionProps,\n} from './actions';\nimport {selectActions, selectPosts, selectPostsBuffer, selectModalAuthor} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectPosts,\n    selectPostsBuffer,\n    selectActions,\n    selectModalAuthor,\n    (posts, buffer, transients, modalAuthorInfo) => ({\n        items: posts,\n        buffer,\n        transients,\n        modalAuthorInfo,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onPage: page => {\n        props.setPage(page);\n        const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_GET_MANY_POST)({\n            page,\n        })));\n        props.onTrackAsyncAction(['onPage', page], actionId);\n    },\n    onCloseAuthorModal: () => {\n        props.setModalPostAuthor(undefined);\n    },\n    onBatchStar: () => {\n        props.selected.forEach(id => {\n            const actionId = idOfAction(dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_POST)({id})));\n            props.onTrackAsyncAction(['onStar', id], actionId);\n        });\n    },\n    onToggleCheck: id => {\n        if (props.selected.includes(id)) {\n            props.setSelected(props.selected.filter(item => item !== id));\n        } else {\n            props.setSelected([...props.selected, id]);\n        }\n    },\n    onViewAuthor: id => {\n        props.setModalPostAuthor(id);\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst withLifecycle = lifecycle({\n    componentDidMount() {\n        delay(2).then(() => {\n            this.props.onPage(1);\n        });\n    }\n});\n\nconst withLiftedStates = compose(\n    withState('selected', 'setSelected', []),\n    withState('page', 'setPage', 1),\n    withState('modalPostAuthor', 'setModalPostAuthor', undefined),\n);\n\n// const withAsyncAction = withAsyncActionStateHandler(({actionIds, setActionId, unsetActionId}) => ({\n//     actionIds,\n//     onTrackAsyncAction: setActionId,\n//     onUntrackAsyncAction: unsetActionId,\n// }));\n\n// export default compose(withLiftedStates, withAsyncAction, withRedux, withLifecycle)(PostList);\n\nexport default compose(\n    withLiftedStates,\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    withLifecycle,\n)(PostList);\n","import Pager from './Pager';\nimport AuthorModal from './AuthorModal';\nimport MaybeDataRows from '../../connects/PostList/MaybeDataRows';\nimport MaybeBuffer from '../../connects/PostList/MaybeBuffer';\nimport cx from './index.m.scss';\n\nexport default ({\n    modalPostAuthor,\n    modalAuthorInfo,\n    page,\n    selected,\n    onPage,\n    onToggleCheck,\n    onCloseAuthorModal,\n    onBatchStar,\n    onTrackAsyncAction,\n    onUntrackAsyncAction,\n    onViewAuthor,\n}) => (\n    <div className=\"mx-auto\" style={{marginTop: '50px', width: '1200px'}}>\n        <table className=\"table table-md\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author/Commenter Number</th>\n                    <th scope=\"col\">E-mail</th>\n                    <th scope=\"col\" style={{width: '200px'}}>Operation</th>\n                </tr>\n            </thead>\n            <tbody>\n                <MaybeDataRows\n                    page={page}\n                    selected={selected}\n                    onToggleCheck={onToggleCheck}\n                    onTrackAsyncAction={onTrackAsyncAction}\n                    onUntrackAsyncAction={onUntrackAsyncAction}\n                    onViewAuthor={onViewAuthor}\n                />\n                <MaybeBuffer page={page} />\n            </tbody>\n        </table>\n        <div>\n            <button\n                type=\"button\"\n                onClick={onBatchStar}\n                className={cx('btn btn-primary btn-sm')}\n            >\n                Star selected\n            </button>\n            <br />\n            <br />\n        </div>\n        <Pager onPage={onPage} page={page} />\n        {!!modalPostAuthor && (<AuthorModal {...modalAuthorInfo} onCloseAuthorModal={onCloseAuthorModal} />)}\n    </div>\n);\n","import React from 'react';\nimport {hot} from 'react-hot-loader'\nimport {Provider} from 'react-redux';\nimport store from '../../store';\nimport PostList from '../../connects/PostList';\n\nconst App = () => (\n    <Provider store={store}>\n        <header>\n            <a href=\"https://github.com/hanzhixing/redux-saga-mate.git\">\n                <svg height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\">\n                    <path\n                        fillRule=\"evenodd\"\n                        d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                    />\n                </svg>\n            </a>\n        </header>\n        <div><PostList /></div>\n    </Provider>\n);\n\nexport default hot(module)(App);\n","import {render} from '@hot-loader/react-dom';\nimport 'open-iconic/font/css/open-iconic-bootstrap.css'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport './index.css';\n\nconst root = document.createElement('div');\n\ndocument.body.appendChild(root);\n\nrender(<App />, root);\n"],"sourceRoot":""}