{"version":3,"sources":["components/TodoList/index.m.scss","components/TodoList/Pager.jsx","components/TodoList/AuthorModal.jsx","components/TodoList/Loading.jsx","components/TodoList/DataRow.jsx","components/TodoList/DataRows.jsx","connects/TodoList/actions.js","connects/TodoList/selectors.js","connects/TodoList/MaybeDataRows.js","components/TodoList/Placeholder.jsx","components/TodoList/NoData.jsx","connects/TodoList/MaybeBuffer.js","components/TodoList/LoadingBuffer.jsx","components/TodoList/Empty.jsx","components/TodoList/Buffer.jsx","components/TodoList/index.jsx","connects/TodoList/index.js"],"names":["classNames","locals","css","bind","style","hasOwnProperty","Object","defineProperty","value","module","exports","PageNumber","page","active","className","cx","aria-current","undefined","to","e2e","aria-label","map","i","key","ReactModal","setAppElement","document","body","isLoading","name","onCloseAuthorModal","isOpen","contentLabel","content","width","height","fontSize","textAlign","margin","paddingTop","role","type","onClick","Loading","rows","repeat","n","push","colSpan","loading","DataRow","id","title","author","commenters","star","onStar","onStarTransient","onClearStarLoading","onViewAuthor","isChecked","onToggleCheck","scope","checked","onChange","length","error","DataRows","items","selected","item","includes","get","createAsyncActionContext","withAsyncActionContextProvider","withAsyncActionContextConsumer","mapAsyncActionProps","actionIds","setActionId","unsetActionId","onTrackAsyncAction","onUntrackAsyncAction","selectTodoIds","state","props","selectUsers","entities","users","selectTodos","createSelector","todos","ids","String","selectTodosBuffer","buffer","filter","selectActions","createSelectActions","selectModalAuthor","modalTodoAuthor","todo","actions","selectTransientOfOnPage","onPage","selectTransientOfOnStar","withRedux","connect","selectProps","onPageTransient","dispatch","action","createAsyncAction","ActionTypes","idOfAction","todoId","createAction","maybePlaceholder","branch","renderComponent","v","maybeLoading","maybeNoData","maybeNotDataRows","compose","withProps","onAccept","maybeBufferLoading","maybeNothing","maybeNotBuffer","TodoList","modalAuthorInfo","onBatchStar","MaybeDataRows","MaybeBuffer","Pager","AuthorModal","AbortController","window","transients","Number","setModalTodoAuthor","setSelected","forEach","withLifecycle","lifecycle","componentDidMount","this","controller","delay","signal","then","componentDidUpdate","prevProps","componentWillUnmount","abort","withLiftedStates","withState","withRouter"],"mappings":"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","file":"static/js/TodoList.56de30ad21163dd31a24.chunk.js","sourcesContent":["\n        // classnames-loader: automatically bind css-modules to classnames\n        var classNames = require(\"!../../../../node_modules/classnames/bind.js\");\n        var locals = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-2!../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-4-4!./index.m.scss\");\n        var css = classNames.bind(locals);\n        for (var style in locals) {\n            if (!locals.hasOwnProperty(style)) {\n                continue;\n            }\n            if (typeof Object.defineProperty === 'function') {\n                Object.defineProperty(css, style, {value: locals[style]});\n            }\n            else {\n                css[style] = locals[style];\n            }\n        }\n        module.exports = css;\n    ","import {NavLink} from 'react-router-dom';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nconst PageNumber = ({page, active}) => (\n    <li className={cx('page-item', {active})} aria-current={active ? 'page' : undefined}>\n        <NavLink\n            to={`/todo-list/${page}`}\n            className={cx('page-link', e2e(`page-${page}`))}\n        >\n            {page}\n            {active && (<span className=\"sr-only\">(current)</span>)}\n        </NavLink>\n    </li>\n);\n\nexport default ({page}) => (\n    <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination justify-content-center\">\n            {\n                [1, 2, 3, 4, 5].map(i => (\n                    <PageNumber key={i} page={i} active={i === page} />\n                ))\n            }\n        </ul>\n    </nav>\n);\n","/* global document */\nimport ReactModal from 'react-modal';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nReactModal.setAppElement(document.body);\n\nexport default ({isLoading, name, onCloseAuthorModal}) => (\n    <ReactModal\n        isOpen={true}\n        contentLabel=\"Author Infomation\"\n        style={{\n            content: {\n                width: '400px',\n                height: '100px',\n                fontSize: '24px',\n                textAlign: 'center',\n                margin: '30px auto',\n                paddingTop: '30px',\n            },\n        }}\n    >\n        {\n            isLoading && (\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            )\n        }\n        {name}\n        {' '}\n        <button\n            type=\"button\"\n            onClick={onCloseAuthorModal}\n            className={cx('btn btn-primary btn-sm', e2e('global-author-modal'))}\n        >\n            Close\n        </button>\n    </ReactModal>\n);\n","import {repeat} from '../../utils';\n\nconst Loading = () => {\n    const rows = [];\n\n    const loading = n => (\n        <tr key={n}>\n            <td colSpan=\"4\" className=\"text-center\">\n                <div className=\"text-center\">\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n    );\n\n    const makeLoading = n => {\n        rows.push(loading(n));\n        return n + 1;\n    };\n\n    repeat(5)(makeLoading)(1);\n\n    return rows;\n};\n\nexport default Loading;\n","import {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nconst DataRow = ({\n    id,\n    title,\n    author,\n    commenters,\n    star,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    isChecked,\n    onToggleCheck,\n}) => {\n    const handleStar = () => {\n        onStar(id);\n    };\n\n    const handleConfirmError = () => {\n        onClearStarLoading(id);\n    };\n\n    const handleViewAuthor = () => {\n        onViewAuthor(id);\n    };\n\n    const handleToggleCheck = () => {\n        onToggleCheck(id);\n    };\n\n    return (\n        <tr>\n            <th scope=\"row\">\n                <input type=\"checkbox\" checked={isChecked} onChange={handleToggleCheck} />\n                {' '}\n                {id}\n            </th>\n            <td>{title}</td>\n            <td className={cx('operation')}>\n                {author}\n                {' '}\n                <button\n                    type=\"button\"\n                    onClick={handleViewAuthor}\n                    className={cx('oi oi-eye', e2e('view-author'))}\n                />\n                {' '}\n                {commenters.length}\n            </td>\n            <td className={cx('operation')}>\n                {' '}\n                {onStarTransient && onStarTransient.isLoading && (\n                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                )}\n                {(!onStarTransient || !onStarTransient.isLoading) && (\n                    <button\n                        type=\"button\"\n                        onClick={handleStar}\n                        className={cx('oi oi-star', 'no-border', {star}, e2e('star-todo'))}\n                    />\n                )}\n                {' '}\n                {\n                    (onStarTransient && !onStarTransient.isLoading && onStarTransient.error) && (\n                        <button\n                            type=\"button\"\n                            className={cx('text', 'text-danger', 'no-border', e2e('confirm-star-error'))}\n                            onClick={handleConfirmError}\n                        >\n                            Failed! Click to Dimiss!\n                        </button>\n                    )\n                }\n            </td>\n        </tr>\n    );\n};\n\nexport default DataRow;\n","import {get} from 'lodash/fp';\nimport DataRow from './DataRow';\n\nconst DataRows = ({\n    items,\n    selected,\n    onStar,\n    onStarTransient,\n    onClearStarLoading,\n    onViewAuthor,\n    onToggleCheck,\n}) => items.map(item => (\n    <DataRow\n        key={item.id}\n        {...item}\n        isChecked={(selected || []).includes(item.id)}\n        onStar={onStar}\n        onStarTransient={get(item.id, onStarTransient)}\n        onViewAuthor={onViewAuthor}\n        onToggleCheck={onToggleCheck}\n        onClearStarLoading={onClearStarLoading}\n    />\n));\n\nexport default DataRows;\n","import {createAsyncActionContext} from 'redux-saga-mate';\n\nexport const {\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n} = createAsyncActionContext();\n\nexport const mapAsyncActionProps = ({actionIds, setActionId, unsetActionId}) => ({\n    actionIds,\n    onTrackAsyncAction: setActionId,\n    onUntrackAsyncAction: unsetActionId,\n});\n","import {createSelector} from 'reselect';\nimport {get} from 'lodash/fp';\nimport {createSelectActions} from 'redux-saga-mate';\n\nexport const selectTodoIds = (state, props) => get(['ui', 'todos', props.page, 'ids'], state);\nexport const selectBufferTodoIds = (state, props) => get(['ui', 'todos', props.page, 'buffer'], state);\nexport const selectModalTodo = (state, props) => get([props.modalTodoAuthor], state.entities.todos);\n\nexport const selectUsers = state => state.entities.users;\n\nexport const selectTodos = createSelector(\n    state => state.entities.todos,\n    selectTodoIds,\n    selectUsers,\n    (todos, ids, users) => {\n        if (ids) {\n            return ids.map(id => ({\n                ...todos[String(id)],\n                author: users[todos[String(id)].author].name,\n            }));\n        }\n        return undefined;\n    },\n);\n\nexport const selectTodosBuffer = createSelector(\n    selectBufferTodoIds,\n    selectTodoIds,\n    (buffer, ids) => {\n        if (!buffer || !ids) {\n            return [];\n        }\n        return buffer.filter(id => !ids.includes(id));\n    },\n);\n\nexport const selectActions = createSelectActions(\n    get('actions'),\n    (state, props) => props.actionIds,\n);\n\nexport const selectModalAuthor = createSelector(\n    selectModalTodo,\n    selectUsers,\n    selectActions,\n    (todo, users, actions) => {\n        const {isLoading} = actions.onViewAuthor ? actions.onViewAuthor : {isLoading: undefined};\n\n        if (isLoading) {\n            return {isLoading};\n        }\n\n        return {\n            isLoading,\n            ...todo ? get([todo.author], users) : {},\n        };\n    },\n);\n\nexport const selectTransientOfOnPage = createSelector(\n    selectActions,\n    (state, props) => props.page,\n    (actions, page) => {\n        if (!actions.onPage || !actions.onPage[page]) {\n            return undefined;\n        }\n        return actions.onPage[page];\n    },\n);\n\nexport const selectTransientOfOnStar = createSelector(\n    selectActions,\n    actions => {\n        if (!actions.onStar || !actions.onStar) {\n            return undefined;\n        }\n        return actions.onStar;\n    },\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate';\nimport Placeholder from '../../components/TodoList/Placeholder';\nimport Loading from '../../components/TodoList/Loading';\nimport NoData from '../../components/TodoList/NoData';\nimport DataRows from '../../components/TodoList/DataRows';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectTodos, selectTodosBuffer, selectTransientOfOnPage, selectTransientOfOnStar} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectTodos,\n    selectTodosBuffer,\n    selectTransientOfOnPage,\n    selectTransientOfOnStar,\n    (items, buffer, onPageTransient, onStarTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n        onStarTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, {\n    onTrackAsyncAction,\n    onViewAuthor,\n    onUntrackAsyncAction,\n    actionIds,\n}) => ({\n    onStar: id => {\n        const action = dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_TODO)({id}));\n        onTrackAsyncAction(['onStar', id], idOfAction(action));\n    },\n    onViewAuthor: id => {\n        const action = dispatch(createAsyncAction(ActionTypes.ASYNC_GET_ONE_USER_BY_TODO_ID)({\n            todoId: id,\n        }));\n        onTrackAsyncAction('onViewAuthor', idOfAction(action));\n        onViewAuthor(id);\n    },\n    onClearStarLoading: id => {\n        onUntrackAsyncAction(['onStar', id]);\n        dispatch(createAction(ActionTypes.CLEANUP)(actionIds.onStar[id]));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybePlaceholder = branch(\n    ({items, onPageTransient}) => (!items && !onPageTransient),\n    renderComponent(Placeholder),\n);\n\nconst maybeLoading = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && onPageTransient.isLoading),\n    renderComponent(Loading),\n);\n\nconst maybeNoData = branch(\n    ({items, onPageTransient}) => (!items && onPageTransient && !onPageTransient.isLoading),\n    renderComponent(NoData),\n);\n\nconst maybeNotDataRows = compose(maybeNoData, maybePlaceholder, maybeLoading);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotDataRows,\n)(DataRows);\n","export default () => (\n    <>\n        {\n            [1, 2, 3, 4, 5].map((v, i) => (\n                <tr key={i}><td colSpan=\"4\" className=\"text-center\">&nbsp;</td></tr>\n            ))\n        }\n    </>\n);\n","export default () => (\n    <tr><td colSpan=\"4\" className=\"text-center\">没有符合条件的数据!</td></tr>\n);\n","import {connect} from 'react-redux';\nimport {compose, branch, renderComponent, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAction} from 'redux-actions';\nimport LoadingBuffer from '../../components/TodoList/LoadingBuffer';\nimport Buffer from '../../components/TodoList/Buffer';\nimport Empty from '../../components/TodoList/Empty';\nimport {mapAsyncActionProps, withAsyncActionContextConsumer} from './actions';\nimport {selectTodos, selectTodosBuffer, selectTransientOfOnPage} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst makeSelectProps = () => createSelector(\n    selectTodos,\n    selectTodosBuffer,\n    selectTransientOfOnPage,\n    (items, buffer, onPageTransient) => ({\n        items,\n        buffer,\n        onPageTransient,\n    }),\n);\n\nconst makeMapStateToProps = () => {\n    const selectProps = makeSelectProps();\n    return (state, props) => selectProps(state, props);\n};\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onAccept: () => {\n        dispatch(createAction(ActionTypes.ACCEPT_UPDATE_TODO_LIST)({page: props.page}));\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst maybeBufferLoading = branch(\n    ({items, onPageTransient}) => (\n        items && onPageTransient && onPageTransient.isLoading\n    ),\n    renderComponent(LoadingBuffer),\n);\n\nconst maybeNothing = branch(\n    ({items, buffer, onPageTransient}) => (\n        !items\n            || (items && !buffer.length && !onPageTransient)\n            || (items && onPageTransient && !onPageTransient.isLoading && !buffer.length)\n    ),\n    renderComponent(Empty),\n);\n\nconst maybeNotBuffer = compose(\n    maybeBufferLoading,\n    maybeNothing,\n);\n\nexport default compose(\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    maybeNotBuffer,\n)(Buffer);\n","export default () => (\n    <tr>\n        <td colSpan=\"4\" className=\"text-center\">\n            <div className=\"text-center\">\n                <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </td>\n    </tr>\n);\n","export default () => (\n    <tr><td colSpan=\"4\" className=\"text-center\">&nbsp;</td></tr>\n);\n","import {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nexport default ({buffer, onAccept}) => (\n    <tr key=\"buffer\">\n        <td colSpan=\"4\" className=\"text-center\">\n            {`${buffer.length} new records, click to`}\n            {' '}\n            <button\n                type=\"button\"\n                onClick={onAccept}\n                className={cx('btn btn-outline-primary btn-sm', e2e('accept-new-buffer'))}\n            >\n                accpet!\n            </button>\n        </td>\n    </tr>\n);\n","import Pager from './Pager';\nimport AuthorModal from './AuthorModal';\nimport MaybeDataRows from '../../connects/TodoList/MaybeDataRows';\nimport MaybeBuffer from '../../connects/TodoList/MaybeBuffer';\nimport {e2e} from '../../utils';\nimport cx from './index.m.scss';\n\nconst TodoList = ({\n    page,\n    modalTodoAuthor,\n    modalAuthorInfo,\n    selected,\n    onToggleCheck,\n    onCloseAuthorModal,\n    onBatchStar,\n    onTrackAsyncAction,\n    onUntrackAsyncAction,\n    onViewAuthor,\n}) => (\n    <div className=\"mx-auto\">\n        <table className=\"table\">\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Title</th>\n                    <th scope=\"col\">Author/Commenter Number</th>\n                    <th scope=\"col\" style={{width: '300px'}}>Operation</th>\n                </tr>\n            </thead>\n            <tbody>\n                <MaybeDataRows\n                    page={page}\n                    selected={selected}\n                    onToggleCheck={onToggleCheck}\n                    onTrackAsyncAction={onTrackAsyncAction}\n                    onUntrackAsyncAction={onUntrackAsyncAction}\n                    onViewAuthor={onViewAuthor}\n                />\n                <MaybeBuffer page={page} />\n            </tbody>\n        </table>\n        <div>\n            <button\n                type=\"button\"\n                onClick={onBatchStar}\n                className={cx('btn btn-primary btn-sm', e2e('batch-star'))}\n            >\n                Star selected\n            </button>\n            <br />\n            <br />\n        </div>\n        <Pager page={page} />\n        {!!modalTodoAuthor && (\n            <AuthorModal {...modalAuthorInfo} onCloseAuthorModal={onCloseAuthorModal} />\n        )}\n    </div>\n);\n\nexport default TodoList;\n","/* global window */\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {compose, lifecycle, withState, withProps} from 'recompose';\nimport {createSelector} from 'reselect';\nimport {createAsyncAction, idOfAction} from 'redux-saga-mate';\nimport {delay} from '../../utils';\nimport TodoList from '../../components/TodoList';\nimport {withAsyncActionContextProvider, withAsyncActionContextConsumer, mapAsyncActionProps} from './actions';\nimport {selectActions, selectTodos, selectTodosBuffer, selectModalAuthor} from './selectors';\nimport * as ActionTypes from '../../actions/types';\n\nconst {AbortController} = window;\n\nconst makeMapStateToProps = () => createSelector(\n    selectTodos,\n    selectTodosBuffer,\n    selectActions,\n    selectModalAuthor,\n    (state, props) => props.page,\n    (todos, buffer, transients, modalAuthorInfo, page) => ({\n        page: Number(page),\n        items: todos,\n        buffer,\n        transients,\n        modalAuthorInfo,\n    }),\n);\n\nconst mapDispatchToProps = (dispatch, {\n    onTrackAsyncAction,\n    setModalTodoAuthor,\n    selected,\n    setSelected,\n}) => ({\n    onPage: page => {\n        const action = dispatch(createAsyncAction(ActionTypes.ASYNC_GET_MANY_TODO)({page}));\n        onTrackAsyncAction(['onPage', page], idOfAction(action));\n    },\n    onCloseAuthorModal: () => {\n        setModalTodoAuthor(undefined);\n    },\n    onBatchStar: () => {\n        selected.forEach(id => {\n            const action = dispatch(createAsyncAction(ActionTypes.ASYNC_PATCH_ONE_TODO)({id}));\n            onTrackAsyncAction(['onStar', id], idOfAction(action));\n        });\n    },\n    onToggleCheck: id => {\n        if (selected.includes(id)) {\n            setSelected(selected.filter(item => item !== id));\n        } else {\n            setSelected([...selected, id]);\n        }\n    },\n    onViewAuthor: id => {\n        setModalTodoAuthor(id);\n    },\n});\n\nconst withRedux = connect(makeMapStateToProps, mapDispatchToProps);\n\nconst withLifecycle = lifecycle({\n    componentDidMount() {\n        this.controller = new AbortController();\n\n        const {page, onPage} = this.props;\n\n        delay(0, this.controller.signal).then(() => (onPage(page)));\n    },\n    componentDidUpdate(prevProps) {\n        const {page, onPage} = this.props;\n\n        if (prevProps.page === page) {\n            return;\n        }\n\n        delay(0, this.controller.signal).then(() => (onPage(page)));\n    },\n    componentWillUnmount() {\n        this.controller.abort();\n    },\n});\n\nconst withLiftedStates = compose(\n    withState('selected', 'setSelected', []),\n    withState('modalTodoAuthor', 'setModalTodoAuthor', undefined),\n);\n\nexport default withRouter(compose(\n    withLiftedStates,\n    withAsyncActionContextProvider,\n    withAsyncActionContextConsumer,\n    withProps(mapAsyncActionProps),\n    withRedux,\n    withLifecycle,\n)(TodoList));\n"],"sourceRoot":""}